*packet.RequestNetworkSettings{
	ClientProtocol: int32(685),
}


*packet.NetworkSettings{
	CompressionThreshold: uint16(0x400),
	CompressionAlgorithm: uint16(0x0),
	ClientThrottle: false,
	ClientThrottleThreshold: uint8(0x0),
	ClientThrottleScalar: float32(0),
}


*packet.Login{
	ClientProtocol: int32(685),
	ConnectionRequest: []uint8{<slice too long>},
}


*packet.ServerToClientHandshake{
	JWT: []uint8{0x65, 0x79, 0x4a, 0x68, 0x62, 0x47, 0x63, 0x69, 0x4f, 0x69, 0x4a, 0x46, 0x55, 0x7a, 0x4d, 0x34, 0x4e, 0x43, 0x49, 0x73, 0x49, 0x6e, 0x67, 0x31, 0x64, 0x53, 0x49, 0x36, 0x49, 0x6b, 0x31, 0x49, 0x57, 0x58, 0x64, 0x46, 0x51, 0x56, 0x6c, 0x49, 0x53, 0x32, 0x39, 0x61, 0x53, 0x58, 0x70, 0x71, 0x4d, 0x45, 0x4e, 0x42, 0x55, 0x56, 0x6c, 0x47, 0x53, 0x7a, 0x52, 0x46, 0x52, 0x55, 0x46, 0x44, 0x53, 0x55, 0x52, 0x5a, 0x5a, 0x30, 0x46, 0x46, 0x62, 0x47, 0x31, 0x77, 0x4b, 0x79, 0x39, 0x6f, 0x59, 0x32, 0x74, 0x4d, 0x51, 0x56, 0x42, 0x61, 0x65, 0x6a, 0x64, 0x74, 0x62, 0x56, 0x42, 0x76, 0x5a, 0x6c, 0x64, 0x6a, 0x5a, 0x30, 0x73, 0x30, 0x57, 0x54, 0x4a, 0x47, 0x52, 0x6d, 0x31, 0x73, 0x54, 0x48, 0x6c, 0x42, 0x53, 0x56, 0x4a, 0x35, 0x51, 0x57, 0x70, 0x50, 0x62, 0x32, 0x64, 0x54, 0x4d, 0x56, 0x64, 0x75, 0x62, 0x31, 0x68, 0x5a, 0x64, 0x30, 0x56, 0x56, 0x63, 0x32, 0x78, 0x32, 0x55, 0x58, 0x4a, 0x4b, 0x64, 0x46, 0x6c, 0x31, 0x51, 0x57, 0x55, 0x30, 0x63, 0x6c, 0x68, 0x78, 0x62, 0x46, 0x41, 0x32, 0x54, 0x6c, 0x59, 0x78, 0x4b, 0x30, 0x34, 0x35, 0x62, 0x55, 0x52, 0x30, 0x5a, 0x6c, 0x70, 0x76, 0x54, 0x6c, 0x45, 0x32, 0x64, 0x32, 0x4e, 0x73, 0x62, 0x33, 0x56, 0x47, 0x4e, 0x46, 0x4d, 0x79, 0x4e, 0x6e, 0x46, 0x4e, 0x5a, 0x33, 0x52, 0x76, 0x4c, 0x7a, 0x46, 0x32, 0x51, 0x6e, 0x46, 0x70, 0x4e, 0x58, 0x42, 0x36, 0x64, 0x31, 0x52, 0x32, 0x55, 0x7a, 0x4d, 0x35, 0x62, 0x56, 0x64, 0x53, 0x56, 0x33, 0x6b, 0x31, 0x62, 0x31, 0x5a, 0x36, 0x4b, 0x32, 0x56, 0x35, 0x4e, 0x30, 0x63, 0x69, 0x66, 0x51, 0x2e, 0x65, 0x79, 0x4a, 0x7a, 0x59, 0x57, 0x78, 0x30, 0x49, 0x6a, 0x6f, 0x69, 0x4d, 0x6d, 0x52, 0x48, 0x51, 0x32, 0x59, 0x79, 0x4d, 0x57, 0x74, 0x48, 0x53, 0x6a, 0x4e, 0x48, 0x5a, 0x6d, 0x77, 0x31, 0x56, 0x48, 0x4e, 0x58, 0x54, 0x6d, 0x31, 0x48, 0x55, 0x54, 0x30, 0x39, 0x49, 0x6e, 0x30, 0x2e, 0x76, 0x73, 0x39, 0x7a, 0x5f, 0x33, 0x35, 0x4f, 0x74, 0x61, 0x45, 0x69, 0x4d, 0x65, 0x6e, 0x74, 0x58, 0x51, 0x33, 0x49, 0x35, 0x58, 0x57, 0x50, 0x74, 0x4f, 0x76, 0x6a, 0x41, 0x6a, 0x5f, 0x72, 0x34, 0x6b, 0x76, 0x53, 0x70, 0x78, 0x63, 0x70, 0x5a, 0x67, 0x52, 0x53, 0x5a, 0x51, 0x53, 0x34, 0x53, 0x37, 0x6d, 0x57, 0x35, 0x4f, 0x4f, 0x63, 0x66, 0x67, 0x78, 0x74, 0x54, 0x64, 0x68, 0x71, 0x62, 0x4e, 0x44, 0x53, 0x42, 0x30, 0x5a, 0x77, 0x46, 0x4d, 0x4c, 0x51, 0x78, 0x49, 0x53, 0x50, 0x75, 0x32, 0x4c, 0x6b, 0x76, 0x43, 0x41, 0x47, 0x78, 0x41, 0x59, 0x49, 0x65, 0x37, 0x45, 0x50, 0x79, 0x30, 0x70, 0x32, 0x42, 0x6b, 0x32, 0x59, 0x2d, 0x36, 0x35, 0x4d, 0x35, 0x46, 0x69, 0x41, 0x4e, 0x44, 0x35, 0x58, 0x79, 0x38, 0x38, 0x76, 0x37, 0x6b, 0x46, 0x76, 0x30, 0x66, 0x48, 0x55,},
}


*packet.ClientToServerHandshake{}


*packet.PlayStatus{
	Status: int32(0),
}


*packet.ClientCacheStatus{
	Enabled: false,
}


*packet.ResourcePacksInfo{
	TexturePackRequired: true,
	HasAddons: false,
	HasScripts: false,
	BehaviourPacks: []protocol.BehaviourPackInfo{},
	TexturePacks: []protocol.TexturePackInfo{
		protocol.TexturePackInfo{
			UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
			Version: "2.0.27",
			Size: uint64(0x75778),
			ContentKey: "BTKejxuAi3gGHl98ITboz16iGkRioaMI",
			SubPackName: "",
			ContentIdentity: "9c52485d-45cf-4495-ba98-5f285199ece7",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "9829385c-833d-425c-a056-5966f50326f3",
			Version: "1.0.10",
			Size: uint64(0xac9b2),
			ContentKey: "svJsznYrQgPT5lbcltGSuzqVY9jCiQjF",
			SubPackName: "",
			ContentIdentity: "9829385c-833d-425c-a056-5966f50326f3",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "992c27ec-bd5c-4c3b-89f3-8a182a42b314",
			Version: "1.0.1",
			Size: uint64(0x73d8),
			ContentKey: "752M9WIm3yCY0rElriewxnKwnYIxlx9J",
			SubPackName: "",
			ContentIdentity: "992c27ec-bd5c-4c3b-89f3-8a182a42b314",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
			Version: "1.0.3",
			Size: uint64(0x27243),
			ContentKey: "2zSXgPAFGuUyadDnQedJiRHlXMtwNM9n",
			SubPackName: "",
			ContentIdentity: "cc373f5e-cbfa-423b-9700-e5724b4017df",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "5c26ce8a-cf33-4030-8ff0-b197b6772fe9",
			Version: "1.0.3",
			Size: uint64(0x2422b),
			ContentKey: "EFABg0hIP1HcH6fLKF2n4Ueh4jJIHUSA",
			SubPackName: "",
			ContentIdentity: "5c26ce8a-cf33-4030-8ff0-b197b6772fe9",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
			Version: "1.0.2",
			Size: uint64(0x11283d),
			ContentKey: "P2wOXUaynjZDJQHb6S8TnWIjsWw5yh4l",
			SubPackName: "",
			ContentIdentity: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2",
			Version: "1.0.31",
			Size: uint64(0x1454f),
			ContentKey: "UsJmFCsaY7MMG32kg0y9Svof6u6n1Vex",
			SubPackName: "",
			ContentIdentity: "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2",
			HasScripts: false,
			RTXEnabled: false,
		},
	},
	ForcingServerPacks: false,
	PackURLs: []protocol.PackURL{},
}


*packet.ResourcePackClientResponse{
	Response: uint8(0x2),
	PacksToDownload: []string{"9c52485d-45cf-4495-ba98-5f285199ece7_2.0.27", "9829385c-833d-425c-a056-5966f50326f3_1.0.10", "cc373f5e-cbfa-423b-9700-e5724b4017df_1.0.3", "1309cd31-8995-4a60-baac-b5f6c178ddd4_1.0.2", "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2_1.0.31",},
}


*packet.ResourcePackDataInfo{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x4),
	Size: uint64(0x75778),
	Hash: []uint8{0xaf, 0x67, 0x5, 0xbf, 0x83, 0xb2, 0x4d, 0x2f, 0xff, 0x4d, 0xc2, 0x18, 0x1d, 0x6d, 0x5c, 0x42, 0x1b, 0x7, 0x50, 0x1f, 0x3c, 0x64, 0xa, 0x4d, 0x8c, 0x31, 0x53, 0x8d, 0xed, 0x3c, 0xa5, 0x10,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackChunkRequest{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x1),
}


*packet.ResourcePackChunkData{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x1),
	DataOffset: uint64(0x20000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x2),
}


*packet.ResourcePackChunkData{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x2),
	DataOffset: uint64(0x40000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x3),
}


*packet.ResourcePackChunkData{
	UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
	ChunkIndex: uint32(0x3),
	DataOffset: uint64(0x60000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackDataInfo{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x6),
	Size: uint64(0xac9b2),
	Hash: []uint8{0xc8, 0x57, 0xe9, 0x2b, 0x90, 0xaf, 0xfc, 0x69, 0xa8, 0x5b, 0xa4, 0xb2, 0x9d, 0x66, 0x6, 0x99, 0x8f, 0xe1, 0x1e, 0xf6, 0x30, 0x79, 0xda, 0xf8, 0xca, 0xe8, 0x27, 0x1b, 0x72, 0x71, 0x77, 0xc4,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackChunkRequest{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x1),
}


*packet.ResourcePackChunkData{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x1),
	DataOffset: uint64(0x20000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x2),
}


*packet.ResourcePackChunkData{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x2),
	DataOffset: uint64(0x40000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x3),
}


*packet.ResourcePackChunkData{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x3),
	DataOffset: uint64(0x60000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x4),
}


*packet.ResourcePackChunkData{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x4),
	DataOffset: uint64(0x80000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x5),
}


*packet.ResourcePackChunkData{
	UUID: "9829385c-833d-425c-a056-5966f50326f3",
	ChunkIndex: uint32(0x5),
	DataOffset: uint64(0xa0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackDataInfo{
	UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x2),
	Size: uint64(0x27243),
	Hash: []uint8{0x54, 0xcd, 0x31, 0xd5, 0xad, 0xe8, 0xc7, 0x51, 0x78, 0xcc, 0x61, 0xd2, 0xae, 0xee, 0x5c, 0xcc, 0x3d, 0x8d, 0x41, 0x10, 0xda, 0x2b, 0x5, 0xc0, 0x4, 0xa7, 0x64, 0xe5, 0x53, 0x66, 0xb5, 0xa4,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackChunkRequest{
	UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
	ChunkIndex: uint32(0x1),
}


*packet.ResourcePackChunkData{
	UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
	ChunkIndex: uint32(0x1),
	DataOffset: uint64(0x20000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackDataInfo{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x9),
	Size: uint64(0x11283d),
	Hash: []uint8{0xb0, 0x5e, 0x8, 0x3f, 0x49, 0x3f, 0xb0, 0x22, 0x8d, 0x5b, 0xd0, 0x51, 0xc0, 0x5f, 0x7b, 0xc1, 0xf6, 0x84, 0x74, 0xec, 0xb3, 0xd4, 0x86, 0x54, 0x94, 0xf5, 0xff, 0xe6, 0xf7, 0x55, 0x61, 0x9b,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x1),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x1),
	DataOffset: uint64(0x20000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x2),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x2),
	DataOffset: uint64(0x40000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x3),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x3),
	DataOffset: uint64(0x60000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x4),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x4),
	DataOffset: uint64(0x80000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x5),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x5),
	DataOffset: uint64(0xa0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x6),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x6),
	DataOffset: uint64(0xc0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x7),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x7),
	DataOffset: uint64(0xe0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x8),
}


*packet.ResourcePackChunkData{
	UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
	ChunkIndex: uint32(0x8),
	DataOffset: uint64(0x100000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackDataInfo{
	UUID: "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x1),
	Size: uint64(0x1454f),
	Hash: []uint8{0x35, 0x3f, 0x8d, 0x9b, 0x32, 0x6a, 0xe2, 0x3a, 0x27, 0x6a, 0x4e, 0xbf, 0x30, 0x8c, 0x76, 0x31, 0xd, 0x5a, 0xe1, 0x57, 0x2f, 0x57, 0x50, 0x3, 0xad, 0x61, 0x61, 0xd4, 0x76, 0xc7, 0xb0, 0xa6,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackChunkRequest{
	UUID: "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackClientResponse{
	Response: uint8(0x3),
	PacksToDownload: []string{},
}


*packet.ResourcePackStack{
	TexturePackRequired: false,
	BehaviourPacks: []protocol.StackResourcePack{},
	TexturePacks: []protocol.StackResourcePack{
		protocol.StackResourcePack{
			UUID: "9c52485d-45cf-4495-ba98-5f285199ece7",
			Version: "2.0.27",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "9829385c-833d-425c-a056-5966f50326f3",
			Version: "1.0.10",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "992c27ec-bd5c-4c3b-89f3-8a182a42b314",
			Version: "1.0.1",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "cc373f5e-cbfa-423b-9700-e5724b4017df",
			Version: "1.0.3",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "5c26ce8a-cf33-4030-8ff0-b197b6772fe9",
			Version: "1.0.3",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "1309cd31-8995-4a60-baac-b5f6c178ddd4",
			Version: "1.0.2",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "d25ddaa0-62c6-41a6-9ce8-d2b0d19a2de2",
			Version: "1.0.31",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "0fba4063-dba1-4281-9b89-ff9390653530",
			Version: "1.0.0",
			SubPackName: "",
		},
	},
	BaseGameVersion: "1.21.0",
	Experiments: []protocol.ExperimentData{},
	ExperimentsPreviouslyToggled: false,
	IncludeEditorPacks: false,
}


*packet.ResourcePackClientResponse{
	Response: uint8(0x4),
	PacksToDownload: []string{},
}


*packet.SetPlayerGameType{
	GameType: int32(2),
}


*packet.UpdateAbilities{
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073829928),
		PlayerPermissions: uint8(0x1),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x3f),
				FlySpeed: float32(0.05),
				WalkSpeed: float32(0.1),
			},
		},
	},
}


*packet.UpdateAdventureSettings{
	NoPvM: false,
	NoMvP: false,
	ImmutableWorld: false,
	ShowNameTags: true,
	AutoJump: true,
}


*packet.StartGame{
	EntityUniqueID: int64(1073829928),
	EntityRuntimeID: uint64(0x40015828),
	PlayerGameMode: int32(2),
	PlayerPosition: mgl32.Vec3{-512, 11.621, -512},
	Pitch: float32(0),
	Yaw: float32(0),
	WorldSeed: int64(-1),
	SpawnBiomeType: int16(0),
	UserDefinedBiomeName: "",
	Dimension: int32(0),
	Generator: int32(1),
	WorldGameMode: int32(0),
	Hardcore: false,
	Difficulty: int32(0),
	WorldSpawn: protocol.BlockPos{-512, 10, -512},
	AchievementsDisabled: true,
	EditorWorldType: int32(0),
	CreatedInEditor: false,
	ExportedFromEditor: false,
	DayCycleLockTime: int32(12000),
	EducationEditionOffer: int32(0),
	EducationFeaturesEnabled: false,
	EducationProductID: "",
	RainLevel: float32(0),
	LightningLevel: float32(0),
	ConfirmedPlatformLockedContent: false,
	MultiPlayerGame: true,
	LANBroadcastEnabled: true,
	XBLBroadcastMode: int32(4),
	PlatformBroadcastMode: int32(4),
	CommandsEnabled: true,
	TexturePackRequired: true,
	GameRules: []protocol.GameRule{
		protocol.GameRule{
			Name: "naturalregeneration",
			CanBeModifiedByPlayer: false,
			Value: false,
		},
	},
	Experiments: []protocol.ExperimentData{},
	ExperimentsPreviouslyToggled: false,
	BonusChestEnabled: false,
	StartWithMapEnabled: false,
	PlayerPermissions: int32(1),
	ServerChunkTickRadius: int32(4),
	HasLockedBehaviourPack: false,
	HasLockedTexturePack: false,
	FromLockedWorldTemplate: false,
	MSAGamerTagsOnly: false,
	FromWorldTemplate: false,
	WorldTemplateSettingsLocked: false,
	OnlySpawnV1Villagers: false,
	PersonaDisabled: false,
	CustomSkinsDisabled: false,
	EmoteChatMuted: false,
	BaseGameVersion: "1.21.0",
	LimitedWorldWidth: int32(0),
	LimitedWorldDepth: int32(0),
	NewNether: true,
	EducationSharedResourceURI: protocol.EducationSharedResourceURI{
		ButtonName: "",
		LinkURI: "",
	},
	ForceExperimentalGameplay: protocol.Optional[bool] Not Set,
	LevelID: "",
	WorldName: "Lifeboat Network",
	TemplateContentIdentity: "",
	Trial: false,
	PlayerMovementSettings: protocol.PlayerMovementSettings{
		MovementType: int32(1),
		RewindHistorySize: int32(0),
		ServerAuthoritativeBlockBreaking: false,
	},
	Time: int64(0),
	EnchantmentSeed: int32(0),
	Blocks: []protocol.BlockEntry{},
	Items: []protocol.ItemEntry{<slice too long>},
	MultiPlayerCorrelationID: "",
	ServerAuthoritativeInventory: true,
	GameVersion: "PocketMine-MP 4.26.1+dev",
	PropertyData: map[string]any{},
	ServerBlockStateChecksum: uint64(0x0),
	ClientSideGeneration: false,
	WorldTemplateID: uuid.UUID{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	ChatRestrictionLevel: uint8(0x0),
	DisablePlayerInteractions: false,
	ServerID: "",
	WorldID: "",
	ScenarioID: "",
	UseBlockNetworkIDHashes: false,
	ServerAuthoritativeSound: true,
}


*packet.RequestChunkRadius{
	ChunkRadius: int32(16),
	MaxChunkRadius: int32(0),
}


*packet.AvailableActorIdentifiers{
	SerialisedEntityIdentifiers: []uint8{<slice too long>},
}


*packet.BiomeDefinitionList{
	SerialisedBiomeDefinitions: []uint8{<slice too long>},
}


*packet.UpdateAttributes{
	EntityRuntimeID: uint64(0x40015828),
	Attributes: []protocol.Attribute{
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:health",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:follow_range",
				Value: float32(16),
				Max: float32(2048),
				Min: float32(0),
			},
			Default: float32(16),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:knockback_resistance",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:movement",
				Value: float32(0.1),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0.1),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:attack_damage",
				Value: float32(1),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(1),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:absorption",
				Value: float32(0),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.hunger",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.saturation",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.exhaustion",
				Value: float32(0),
				Max: float32(5),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.level",
				Value: float32(0),
				Max: float32(24791),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.experience",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
	},
	Tick: uint64(0x0),
}


*packet.AvailableCommands{
	EnumValues: []string{"hub", "lobby", "ignore", "block", "unignore", "unblock", "p", "party", "report", "hacker",},
	ChainedSubcommandValues: []string{},
	Suffixes: []string{},
	Enums: []protocol.CommandEnum{
		protocol.CommandEnum{
			Type: "LobbyAliases",
			ValueIndices: []uint{0x0, 0x1,},
		},
		protocol.CommandEnum{
			Type: "BlockAliases",
			ValueIndices: []uint{0x2, 0x3,},
		},
		protocol.CommandEnum{
			Type: "UnblockAliases",
			ValueIndices: []uint{0x4, 0x5,},
		},
		protocol.CommandEnum{
			Type: "PartyAliases",
			ValueIndices: []uint{0x6, 0x7,},
		},
		protocol.CommandEnum{
			Type: "HackerAliases",
			ValueIndices: []uint{0x8, 0x9,},
		},
	},
	ChainedSubcommands: []protocol.ChainedSubcommand{},
	Commands: []protocol.Command{
		protocol.Command{
			Name: "emoji",
			Description: "Help on using emojis in chat",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "getpos",
			Description: "Get your XYZ coordinate",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "pos",
			Description: "Toggle coordinate viewing",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "mute",
			Description: "Mute chat",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "unmute",
			Description: "Unmute chat",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "server",
			Description: "The gametype and server number you are currently on",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "region",
			Description: "Get which server region you are in",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "lang",
			Description: "Change your language",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "transfer",
			Description: "Transfer to a specific server",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "tag",
			Description: "Show/hide user tag",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "lobby",
			Description: "Return to the lobby",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0x0),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "block",
			Description: "Blocks a player",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0x1),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "unblock",
			Description: "Unblocks a player",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0x2),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "discord",
			Description: "Verify discord code to get Discord rank",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "party",
			Description: "Open Party UI",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0x3),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "pet",
			Description: "Open Pet Menu",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0xffffffff),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
		protocol.Command{
			Name: "hacker",
			Description: "Report a Player",
			Flags: uint16(0x0),
			PermissionLevel: uint8(0x0),
			AliasesOffset: uint32(0x4),
			ChainedSubcommandOffsets: []uint16{},
			Overloads: []protocol.CommandOverload{
				protocol.CommandOverload{
					Chaining: false,
					Parameters: []protocol.CommandParameter{
						protocol.CommandParameter{
							Name: "args",
							Type: uint32(0x100046),
							Optional: true,
							Options: uint8(0x0),
						},
					},
				},
			},
		},
	},
	DynamicEnums: []protocol.DynamicEnum{},
	Constraints: []protocol.CommandEnumConstraint{},
}


*packet.UpdateAbilities{
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073829928),
		PlayerPermissions: uint8(0x1),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x3f),
				FlySpeed: float32(0.05),
				WalkSpeed: float32(0.1),
			},
		},
	},
}


*packet.UpdateAdventureSettings{
	NoPvM: false,
	NoMvP: false,
	ImmutableWorld: false,
	ShowNameTags: true,
	AutoJump: true,
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40015828),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x54: "",
		0x3: uint8(0x0),
		0x5: int64(-1),
		0x2a: int16(300),
		0x6: int64(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x25: int64(-1),
		0x0: int64(844459290411008),
		0x7: int16(300),
		0x8: int32(0),
		0x35: float32(0.6),
		0x36: float32(1.8),
		0x4: "SrDuck84",
		0x9: uint8(0x0),
		0x26: float32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.InventoryContent{
	WindowID: uint32(0x0),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x0),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(1),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(399),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{
					"display": map[string]any{
						"Name": "§r§dNavigator",
					},
				},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(2),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(310),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{
					"display": map[string]any{
						"Name": "§r§aProduct Manager",
					},
				},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(3),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{
					"display": map[string]any{
						"Name": "§r§eProfile & Settings",
					},
				},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(4),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(584),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{
					"display": map[string]any{
						"Name": "§r§fParty",
					},
				},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(5),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(564),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{
					"display": map[string]any{
						"Name": "§r§fFriends",
					},
				},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x77),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x77),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x78),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x78),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x0),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1d),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1e),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1f),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40015828),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x0),
}


*packet.CreativeContent{
	Items: []protocol.CreativeItem{
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(5),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13256),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-739),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13612),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-740),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9075),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-741),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11816),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-742),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7280),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-743),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5928),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2652),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2653),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2654),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2655),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2656),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2657),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2664),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2659),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2660),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2658),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2661),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2665),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2662),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2663),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(85),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9529),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-579),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1155),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-576),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13878),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-578),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1148),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-575),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13897),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-577),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12347),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(113),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7075),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(107),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(78),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(183),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11784),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(184),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6161),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(185),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9115),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(187),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13303),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(186),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6954),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-180),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1390),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(67),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6080),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-179),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6863),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(53),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(728),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(134),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(133),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(135),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12225),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(136),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12187),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(163),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11326),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(164),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8825),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(109),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2408),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-175),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10492),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(128),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5961),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-177),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5998),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(180),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9100),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-176),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9323),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-169),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5508),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-172),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6924),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-170),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7219),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-173),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11911),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-171),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9067),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-174),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12255),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(108),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11709),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(114),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(108),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-184),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11802),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-178),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11512),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(156),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8110),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-185),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13417),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(203),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13482),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-2),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12951),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-3),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13133),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-4),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(619),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x40),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(366),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x41),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(569),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x42),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(570),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x43),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(571),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x44),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(572),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x45),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(573),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x46),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(379),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x47),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(96),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(656),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x48),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-149),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11751),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x49),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-146),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11853),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-148),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9134),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-145),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9364),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-147),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13211),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(167),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1072),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(101),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8145),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x4f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(20),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11306),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x50),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(241),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8589),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x51),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-680),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1196),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x52),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-679),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6089),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x53),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-687),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10537),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x54),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-684),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1795),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x55),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-686),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8999),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x56),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-673),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7391),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x57),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-676),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13296),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x58),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-677),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(119),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x59),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-685),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7073),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-681),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10536),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-675),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9570),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-683),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9534),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-682),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2640),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-674),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12910),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x5f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-678),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7143),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x60),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(102),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8995),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x61),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(160),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7392),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x62),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-650),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1198),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x63),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-649),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12113),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x64),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-657),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2651),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x65),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-654),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(740),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x66),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-656),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12339),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x67),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-643),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(646),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x68),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-646),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(554),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x69),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-647),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13294),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-655),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6923),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-651),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11659),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-645),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6654),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-653),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(77),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-652),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8593),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x6f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-644),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8144),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x70),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-648),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12344),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x71),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(65),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14103),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x72),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13260),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x73),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-166),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9605),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x74),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6972),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x75),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9576),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x76),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(158),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7077),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x77),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-804),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12242),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x78),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-805),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6594),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x79),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-806),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6652),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-807),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13283),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-808),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1199),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11401),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-166),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9603),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1117),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x7f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-166),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9606),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x80),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9577),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x81),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9571),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x82),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-166),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9607),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x83),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9588),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x84),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9593),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x85),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9594),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x86),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9591),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x87),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9592),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x88),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9590),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x89),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9589),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13253),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11149),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9578),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9587),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11875),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x8f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-166),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9604),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x90),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9572),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x91),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9573),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x92),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9574),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x93),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(182),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9575),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x94),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(45),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8092),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x95),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(98),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11744),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x96),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(98),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11745),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x97),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(98),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11746),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x98),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(98),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11747),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x99),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(206),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(741),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(168),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11195),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(4),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5992),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(48),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(683),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-183),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7427),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(24),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6025),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x9f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(24),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6026),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(24),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6027),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(24),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6028),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(179),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11779),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(179),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11780),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(179),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11781),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(179),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11782),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(173),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9151),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-139),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13789),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(41),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(784),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xa9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(42),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14100),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xaa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(133),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2615),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xab),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(57),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(727),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xac),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(22),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7067),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xad),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(155),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6068),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xae),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(155),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6070),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xaf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(155),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6069),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(155),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6071),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(168),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11193),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(168),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11194),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(165),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7027),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(170),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1992),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(216),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7028),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(112),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12971),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(215),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(558),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(35),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9152),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xb9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-552),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13853),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xba),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-553),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(645),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xbb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-554),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1123),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xbc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-555),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(704),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xbd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-556),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(120),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xbe),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-557),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1969),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xbf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-558),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(547),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-559),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11083),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-560),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6106),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-561),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9088),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-562),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12345),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-563),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9255),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-564),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14099),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-565),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2434),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-566),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6159),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(171),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12959),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xc9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-604),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14098),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xca),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-603),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(648),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xcb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-611),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11124),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xcc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-608),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2407),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xcd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-610),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13123),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xce),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-597),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12302),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xcf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-600),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10535),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-601),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11922),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-609),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6107),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-605),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5995),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-599),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8150),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-607),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(591),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-606),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13474),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-598),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(687),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-602),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13416),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(237),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8535),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xd9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-716),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12943),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xda),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-715),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13067),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xdb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-723),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1159),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xdc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-720),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10083),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xdd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-722),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12942),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xde),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-709),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14061),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xdf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-712),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13289),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-713),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13809),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-721),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12239),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-717),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5903),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-711),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(65),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-719),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11919),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-718),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11734),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-710),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7282),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-714),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7081),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(236),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13884),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xe9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-635),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1979),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xea),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-634),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13070),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xeb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-642),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11901),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xec),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-639),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11342),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xed),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-641),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13415),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xee),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-628),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11920),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xef),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-631),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5994),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-632),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7447),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-640),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10509),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-636),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12960),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-630),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13142),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-638),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12970),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-637),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6977),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-629),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7186),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-633),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5516),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(82),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12393),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xf9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(172),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1398),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xfa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(159),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8146),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xfb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-731),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1790),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xfc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-730),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7429),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xfd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-738),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11214),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xfe),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-735),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13835),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0xff),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-737),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2428),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x100),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-724),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13252),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x101),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-727),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6987),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x102),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-728),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14071),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x103),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-736),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6090),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x104),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-732),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x105),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-726),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7180),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x106),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-734),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6024),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x107),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-733),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11520),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x108),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-725),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7453),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x109),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-729),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6936),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(220),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9352),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(228),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5504),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(227),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14090),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(235),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10008),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(232),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5906),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x10f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(234),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6950),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x110),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(221),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2607),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x111),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(224),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2395),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x112),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(225),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(652),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x113),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(233),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11812),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x114),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(229),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9110),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x115),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(223),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9247),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x116),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(231),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9241),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x117),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(219),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12235),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x118),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(222),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2437),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x119),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(226),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11737),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(201),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13431),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(201),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13433),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(214),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7083),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(3),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9532),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(3),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9533),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x11f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(60),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6683),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x120),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(2),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10571),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x121),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(198),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13898),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x122),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(243),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7937),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x123),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(110),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6055),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x124),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(1),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1798),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x125),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(15),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7977),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x126),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(14),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2392),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x127),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(56),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7184),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x128),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(21),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13414),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x129),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(73),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7070),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(16),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7068),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(129),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13050),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(153),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7340),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(13),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(14126),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-590),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(76),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x12f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-592),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(142),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x130),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-594),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1796),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x131),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-591),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1169),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x132),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-593),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9999),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x133),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-595),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13262),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x134),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(12),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6989),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x135),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(12),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6990),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x136),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(81),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12205),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x137),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(17),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(737),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x138),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-10),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13257),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x139),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-569),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7064),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-5),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11411),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-570),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1799),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-6),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10663),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-571),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(635),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-7),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1783),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x13f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(162),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7157),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x140),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-8),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10052),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x141),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-572),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(4932),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x142),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-9),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(629),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x143),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-212),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8590),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x144),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-819),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8147),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x145),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-814),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13299),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x146),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-820),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1966),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x147),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-815),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1989),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x148),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-821),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7393),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x149),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-816),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2004),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-822),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1099),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-817),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12110),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-823),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(724),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-818),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-824),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8585),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x14f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(18),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2010),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x150),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-800),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7227),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x151),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-801),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6932),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x152),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-802),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9095),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x153),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(161),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2647),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x154),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-803),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11145),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x155),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(6),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1786),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x156),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-825),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6985),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x157),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-826),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13209),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x158),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-827),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11113),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x159),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-828),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11479),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-829),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1156),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(295),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(296),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(297),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(299),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x15f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(341),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x160),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(289),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x161),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(284),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x162),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(286),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x163),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(283),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x164),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(287),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x165),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(257),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x166),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(262),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x167),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(263),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x168),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(103),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1158),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x169),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(276),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(443),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(291),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(86),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7422),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-155),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13080),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(91),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11879),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x16f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-848),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11167),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x170),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-865),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11673),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x171),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(742),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11741),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x172),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-864),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11656),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x173),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-583),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1797),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x174),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-581),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1965),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x175),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-582),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11345),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x176),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-131),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13490),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x177),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-584),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5993),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x178),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-588),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13490),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x179),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-586),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13490),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-587),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13490),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-585),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13490),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-589),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13490),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-842),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11749),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-840),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2014),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x17f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-841),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(638),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x180),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-133),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(678),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x181),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-843),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11670),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x182),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-846),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11923),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x183),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-844),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(672),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x184),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-845),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(633),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x185),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-134),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11909),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x186),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-847),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12303),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x187),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(37),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1051),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x188),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(38),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6103),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x189),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-830),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6922),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-831),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1120),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-832),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(556),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-833),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13143),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-834),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12094),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-835),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7446),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x18f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-836),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7076),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x190),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-837),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12983),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x191),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-838),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8823),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x192),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-839),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(649),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x193),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(175),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7510),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x194),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-863),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13013),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x195),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-866),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9251),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x196),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-867),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13538),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x197),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(418),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x198),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(410),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x199),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(411),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(403),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(406),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(404),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(417),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(414),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x19f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(413),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(405),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(409),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(415),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(407),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(408),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(416),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(412),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(421),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(420),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1a9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(422),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1aa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(419),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ab),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(106),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2358),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ac),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(111),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2613),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ad),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(32),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7964),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ae),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-163),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13272),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1af),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(80),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6988),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(79),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11883),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(174),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(743),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-11),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12252),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(78),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(567),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(279),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(266),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(277),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(566),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(292),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1b9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(268),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ba),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(269),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1bb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(270),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1bc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(271),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1bd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(39),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5902),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1be),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(40),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7450),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1bf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(99),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13065),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(100),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5988),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(99),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13066),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(99),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13051),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(398),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(393),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(424),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(281),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(423),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(30),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11908),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1c9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(282),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ca),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(52),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1168),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1cb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6916),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1cc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6917),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1cd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6918),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ce),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6919),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1cf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6920),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6921),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(122),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12969),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(456),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(459),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(458),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(49),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1197),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(7),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12240),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(88),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9614),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(87),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12265),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1d9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(213),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13822),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1da),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(298),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1db),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(121),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6601),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1dc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(574),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1dd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(575),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1de),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(19),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1385),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1df),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(19),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1386),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-132),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13208),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-849),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9380),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-850),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7074),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-851),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7281),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-852),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9042),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-853),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6600),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-854),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11834),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-855),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2416),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-856),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2429),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1e9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-857),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11660),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ea),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(342),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1eb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(346),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ec),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(350),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ed),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(358),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ee),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(354),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ef),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(343),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(347),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(351),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(359),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(355),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(344),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(348),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(352),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(360),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(356),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1f9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(345),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1fa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(349),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1fb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(353),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1fc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(361),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1fd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(357),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1fe),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(314),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x1ff),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(318),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x200),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(313),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x201),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(329),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x202),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(322),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x203),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(317),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x204),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(321),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x205),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(304),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x206),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(332),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x207),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(325),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x208),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(316),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x209),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(320),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(303),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(331),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(324),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(315),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(319),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x20f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(302),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x210),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(330),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x211),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(323),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x212),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(336),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x213),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(337),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x214),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(338),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x215),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(340),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x216),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(339),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x217),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(306),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x218),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(307),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x219),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(280),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(267),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(278),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(567),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(293),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(272),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x21f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(273),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x220),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(265),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x221),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(264),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x222),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(290),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x223),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(294),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x224),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(285),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x225),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(275),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x226),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(288),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x227),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(425),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x228),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(274),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x229),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(400),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(381),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(429),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(305),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(401),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(399),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x22f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(584),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x230),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(436),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x231),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(524),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x232),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x233),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x234),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x2),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x235),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x3),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x236),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x4),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x237),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x5),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x238),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x6),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x239),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x7),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x8),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x9),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0xa),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0xb),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0xc),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x23f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0xd),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x240),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0xe),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x241),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0xf),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x242),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x10),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x243),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x11),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x244),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x12),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x245),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x13),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x246),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x14),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x247),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x15),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x248),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x16),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x249),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x17),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x18),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x19),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1a),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1b),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1c),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x24f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1d),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x250),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1e),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x251),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x1f),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x252),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x20),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x253),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x21),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x254),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x22),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x255),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x23),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x256),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x24),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x257),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x25),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x258),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x26),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x259),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x27),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x28),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(435),
					MetadataValue: uint32(0x29),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x2),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x25f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x3),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x260),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x4),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x261),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x5),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x262),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x6),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x263),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x7),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x264),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x8),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x265),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x9),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x266),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0xa),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x267),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0xb),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x268),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0xc),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x269),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0xd),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0xe),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0xf),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x10),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x11),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x12),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x26f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x13),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x270),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x14),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x271),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x15),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x272),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x16),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x273),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x17),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x274),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x18),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x275),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x19),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x276),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1a),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x277),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1b),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x278),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1c),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x279),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1d),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1e),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x1f),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x20),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x21),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x22),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x27f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x23),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x280),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x24),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x281),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x25),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x282),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x26),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x283),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x27),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x284),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x28),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x285),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(577),
					MetadataValue: uint32(0x29),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x286),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(327),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x287),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x288),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x8),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x289),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x7),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0xf),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0xc),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0xe),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x1),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x4),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x28f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x5),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x290),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0xd),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x291),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x9),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x292),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x3),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x293),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0xb),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x294),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0xa),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x295),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x2),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x296),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(426),
					MetadataValue: uint32(0x6),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x297),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(50),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2193),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x298),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-156),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10059),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x299),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-208),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12305),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(58),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10058),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-201),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10001),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(61),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13615),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-196),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13280),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-198),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1793),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x29f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(238),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13002),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(238),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12994),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(238),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13006),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(238),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12998),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(440),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(145),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11837),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(145),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11841),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(145),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11845),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(116),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11929),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(47),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11877),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2a9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-194),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12159),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2aa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(54),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12382),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ab),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(146),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9362),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ac),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(130),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7195),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ad),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-203),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7357),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ae),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(205),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6053),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2af),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(218),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1121),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-620),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10518),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-619),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9099),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-627),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11112),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-624),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12095),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-626),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7264),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-613),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11346),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-616),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(116),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-617),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1052),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-625),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11672),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2b9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-621),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12253),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ba),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-615),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12186),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2bb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-623),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11395),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2bc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-622),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13079),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2bd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-614),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(742),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2be),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-618),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7203),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2bf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(25),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1102),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(84),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(8616),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(550),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(551),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(552),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(553),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(554),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(555),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(556),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(557),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2c9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(558),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ca),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(559),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2cb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(560),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2cc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(561),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2cd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(402),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ce),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(89),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6655),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2cf),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(123),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(682),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(169),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13263),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(365),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(592),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(593),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(594),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(595),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(596),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(364),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(529),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2d9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(530),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2da),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(328),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2db),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(367),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2dc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(368),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2dd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(369),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2de),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(370),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2df),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x3),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x2),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x4),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x5),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(532),
					MetadataValue: uint32(0x1),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(138),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(557),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-206),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12127),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-197),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13287),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(120),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11169),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2e9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(308),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ea),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(309),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2eb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(310),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ec),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(585),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ed),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(311),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ee),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(434),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ef),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(312),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(528),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(540),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(392),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(391),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(539),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(581),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(565),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(586),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(587),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2f9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(588),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2fa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(333),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2fb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(334),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2fc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(363),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2fd),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(335),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2fe),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(389),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x2ff),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(545),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x300),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(544),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x301),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(431),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x302),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(438),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x303),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(439),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x304),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(437),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x305),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(576),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x306),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(582),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x307),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(433),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x308),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(396),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x309),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(430),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(534),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(208),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10500),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(394),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(395),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(526),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x30f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(36),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12974),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x310),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-12),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12973),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x311),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-13),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12976),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x312),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-14),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12975),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x313),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-15),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12978),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x314),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-16),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12977),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x315),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-17),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12980),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x316),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-18),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12979),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x317),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-19),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12982),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x318),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-20),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12981),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x319),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-21),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13320),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-22),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13321),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-23),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13322),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-24),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13323),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-25),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13324),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-26),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13325),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x31f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-27),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13326),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x320),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-28),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13327),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x321),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-29),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13328),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x322),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-30),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13329),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x323),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-31),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13343),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x324),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-32),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13342),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x325),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-33),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13345),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x326),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-34),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13344),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x327),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-35),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13347),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x328),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-36),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13346),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x329),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-37),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13349),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-38),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13348),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-39),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13341),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-40),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13340),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-41),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13336),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-42),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13337),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x32f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-43),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13334),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x330),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-44),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13335),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x331),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-45),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13332),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x332),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-46),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13333),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x333),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-47),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13330),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x334),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-48),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13331),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x335),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-49),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13338),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x336),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-50),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13339),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x337),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-51),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13369),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x338),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-52),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13368),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x339),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-53),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13367),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-54),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13366),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-55),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13365),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-56),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13364),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-57),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13363),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-58),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13362),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x33f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-59),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13361),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x340),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-60),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13360),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x341),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-61),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13356),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x342),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-62),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13357),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x343),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-63),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13358),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x344),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-64),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13359),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x345),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-65),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13352),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x346),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-66),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13353),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x347),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-67),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13354),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x348),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-68),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13355),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x349),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-69),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13350),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-70),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13351),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-71),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13385),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-72),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13384),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-73),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13387),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-74),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13386),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x34f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-75),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13381),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x350),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-76),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13380),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x351),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-77),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13383),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x352),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-78),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13382),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x353),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-79),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13389),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x354),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-80),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13388),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x355),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-81),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13372),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x356),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-82),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13373),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x357),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-83),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13370),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x358),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-84),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13371),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x359),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-85),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13376),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-86),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13377),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-87),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13374),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-88),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13375),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-89),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13378),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-90),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13379),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x35f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-91),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13405),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x360),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-92),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13404),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x361),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-93),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13403),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x362),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-94),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13402),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x363),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-95),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13409),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x364),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-96),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13408),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x365),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-97),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13407),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x366),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-98),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13406),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x367),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-99),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13401),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x368),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-100),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13400),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x369),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-101),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13392),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-102),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13393),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-103),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13394),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-104),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13395),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-105),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13396),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-106),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13397),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x36f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-107),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13398),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x370),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-108),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13399),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x371),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-109),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13390),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x372),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-110),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13391),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x373),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-111),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9331),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x374),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-112),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9332),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x375),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-113),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9333),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x376),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-114),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9334),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x377),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-115),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9335),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x378),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-116),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9336),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x379),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-117),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9337),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-118),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9338),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-119),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9339),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-120),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9340),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-121),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9344),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-122),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9343),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x37f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-123),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9342),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x380),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-124),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9341),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x381),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-125),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9348),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x382),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-126),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9347),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x383),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-127),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9346),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x384),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-128),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9345),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x385),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-129),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9349),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x386),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(383),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x387),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(386),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x388),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(384),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x389),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(385),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(387),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(388),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(66),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6691),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(27),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9076),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(28),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6904),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x38f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(126),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1060),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x390),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(377),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x391),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(380),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x392),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(152),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6160),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x393),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(76),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5501),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x394),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(69),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11690),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x395),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(143),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11522),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x396),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-144),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(7145),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x397),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-141),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13526),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x398),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-143),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(121),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x399),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-140),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(12912),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39a),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-142),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(95),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39b),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(77),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(1369),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39c),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(131),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10572),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39d),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(72),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(13862),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39e),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-154),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6142),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x39f),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-151),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(5929),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-153),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6006),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-150),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(9000),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-152),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(10614),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(70),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6656),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(147),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6037),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(148),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(2624),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(151),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6991),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(427),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(538),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3a9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(543),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3aa),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(46),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(11902),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3ab),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(-204),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(6596),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3ac),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3ad),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x8),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3ae),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x7),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3af),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xf),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b0),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xc),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b1),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xe),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b2),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x1),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b3),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x4),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b4),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x5),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b5),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xd),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b6),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x9),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b7),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x3),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b8),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xb),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3b9),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xa),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3ba),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x2),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3bb),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0x6),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.CreativeItem{
			CreativeItemNetworkID: uint32(0x3bc),
			Item: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(583),
					MetadataValue: uint32(0xf),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x1),
				NBTData: map[string]any{
					"Type": int32(1),
				},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.CraftingData{
	Recipes: []protocol.Recipe{<slice too long>},
	PotionRecipes: []protocol.PotionRecipe{
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(12),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(13),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(15),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(16),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(17),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(19),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(20),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(26),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(27),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(29),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(30),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(32),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(33),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(34),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(38),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(39),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(40),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(41),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(6),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(7),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(7),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(8),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(10),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(11),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(3),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(298),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(4),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(12),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(13),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(15),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(16),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(17),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(19),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(20),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(26),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(27),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(29),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(30),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(32),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(33),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(34),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(38),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(39),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(40),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(41),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(6),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(7),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(7),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(8),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(10),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(11),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(3),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(298),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(4),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(22),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(23),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(22),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(23),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(14),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(28),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(25),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(31),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(12),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(21),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(287),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(5),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(9),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(271),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(19),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(589),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(37),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(590),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(40),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(14),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(28),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(25),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(31),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(12),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(21),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(287),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(5),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(9),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(271),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(19),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(589),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(37),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(590),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(40),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(10),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(15),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(1),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(22),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(26),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(27),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(2),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(32),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(33),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(3),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(6),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(8),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(10),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(15),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(1),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(22),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(26),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(27),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(2),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(32),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(33),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(3),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(6),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(8),
		},
	},
	PotionContainerChangeRecipes: []protocol.PotionContainerChangeRecipe{
		protocol.PotionContainerChangeRecipe{
			InputItemID: int32(435),
			ReagentItemID: int32(335),
			OutputItemID: int32(577),
		},
	},
	MaterialReducers: []protocol.MaterialReducer{},
	ClearRecipes: true,
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x56, 0x23, 0x8e, 0x3c, 0x43, 0xad, 0x3a, 0x61, 0xa8, 0x9e, 0x83, 0xc5, 0xce, 0x6e, 0x52, 0x8d},
			EntityUniqueID: int64(1073829928),
			Username: "SrDuck84",
			XUID: "2535445174258287",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "439444e5-a047-41fd-a49b-22ba6bf61afd",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x20),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "3c540963-3d55-45c7-8750-931bd14776ee",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x9a, 0x0, 0x69, 0xbe, 0xb3, 0x6c, 0x3d, 0x3d, 0xa4, 0xc5, 0x4, 0x79, 0xcf, 0x26, 0xd3, 0xb3},
			EntityUniqueID: int64(1073911927),
			Username: "Jelollxyanto",
			XUID: "2535412970272055",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "slim_8b163c8c85f29c32a6ea7b8efab8aa05921b84c528065dd2e39ab6bdcfd94001.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "01d06730-64e7-4e7f-aa19-ac71741bc763",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xfb, 0xd7, 0x1d, 0xdf, 0x65, 0xb5, 0x3e, 0xd1, 0x9e, 0x37, 0x1a, 0x1f, 0xc9, 0xf0, 0xfb, 0xf2},
			EntityUniqueID: int64(1073792927),
			Username: "WorthyCrab6",
			XUID: "2535445026174088",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "38535075-1287-4d3a-92ed-4a759d3f43a4",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "4f9a114c-08ca-42c6-9b4c-943b41fe9d39",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x1a, 0x1e, 0x70, 0x8e, 0x33, 0x67, 0x3c, 0x8a, 0x86, 0x60, 0xd, 0x27, 0x13, 0x63, 0xaa, 0x7},
			EntityUniqueID: int64(1073818924),
			Username: "Sunny 9090909",
			XUID: "2535455712341268",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "7134251e-ec4f-4a40-97d1-70ddf40d60d3",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "32faf46f-4f06-40d5-9c75-a32c92f3370e",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x36, 0xeb, 0x5b, 0xc4, 0x47, 0xf2, 0x3b, 0x9b, 0xb7, 0x75, 0x41, 0xf6, 0xcf, 0x40, 0x7a, 0x61},
			EntityUniqueID: int64(1073916924),
			Username: "SunShinee2408",
			XUID: "2535450595233071",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "fce8d10c-022b-45ae-8648-13f052fa67a6",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "80434073-2b9e-4208-8979-4fc3f9f02e4a",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x1f, 0x4d, 0x6, 0xc7, 0x87, 0x30, 0x3f, 0xa0, 0xa6, 0xb5, 0xea, 0x2d, 0xa1, 0xde, 0xf7, 0x6b},
			EntityUniqueID: int64(1073788927),
			Username: "mahipon1234",
			XUID: "2535414833994752",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "106fb4df-efc0-4f1d-b42e-f8bea7c3eeb0",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "5c702a7c-0859-4a65-be41-7216073c0313",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x9a, 0xb1, 0xbf, 0x52, 0xf6, 0x44, 0x3d, 0x49, 0xad, 0x6f, 0x2e, 0x30, 0x69, 0xad, 0x26, 0xf2},
			EntityUniqueID: int64(1073760825),
			Username: "MakenaN1",
			XUID: "2535425270333299",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "c0edd7ef-b819-44c5-aea7-07962482c477",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "d2158602-219b-4264-b2e0-dd65f32d73d5",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xaa, 0xc3, 0x9f, 0x52, 0xd4, 0x82, 0x38, 0xd8, 0xa1, 0x3, 0xa4, 0xc4, 0x49, 0x4c, 0x7a, 0x3a},
			EntityUniqueID: int64(1073768929),
			Username: "rriemo",
			XUID: "2535415368930679",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "slim_7c756521e768133692406d0482463b66445bc6603bf7de70ef567223d5b88842.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "4c9c93fd-f0a7-4bb4-aa37-3621c67a0540",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xa6, 0x3, 0x86, 0x39, 0x45, 0x60, 0x35, 0x89, 0xac, 0x3e, 0xad, 0xe8, 0xad, 0xf7, 0x5d, 0xb9},
			EntityUniqueID: int64(1073837928),
			Username: "Rudra1sy",
			XUID: "2535413539391273",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "9e2308c8-9b9a-4ee8-978d-8e95335ebd33",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "24c516a9-7138-4565-9fe7-ea5d1c2c77df",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x4, 0x7a, 0x81, 0x5d, 0xc9, 0x46, 0x35, 0x99, 0x86, 0x5, 0x27, 0x91, 0x65, 0x37, 0x13, 0xb2},
			EntityUniqueID: int64(1073930935),
			Username: "TungNCV",
			XUID: "2535432252174389",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "34dfa431-f974-4483-aadc-7d7a024b6404",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "ba6fff8b-3896-410f-a745-c681092131ea",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xfe, 0x18, 0x5e, 0x90, 0x39, 0x34, 0x36, 0x28, 0xb4, 0x5c, 0x89, 0xda, 0x1a, 0x6b, 0x65, 0xcf},
			EntityUniqueID: int64(1073862940),
			Username: "SurefireLoki5",
			XUID: "2535449830469100",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_5ae3b42a488a18a786776810c1c6bb554f24ae28435b6f7a29d10102df0e3057.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "5486fd29-a56f-42a4-9dd7-278be01fdbf4",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xc4, 0xe8, 0x26, 0x59, 0x4e, 0xe7, 0x3a, 0xff, 0xa9, 0x91, 0xa2, 0xaa, 0xb, 0x96, 0xc, 0x97},
			EntityUniqueID: int64(1073748929),
			Username: "LeapingBirch996",
			XUID: "2535469222288523",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_3c2eb20bc8fc05a216565a61704a239e9e6d1dd157575126fc9163684a509e18.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "9fb4c25f-65f2-4f3a-81c3-f5934d6fd51e",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x3f, 0xb2, 0x62, 0xdd, 0xae, 0x3, 0x31, 0x61, 0xb1, 0x9b, 0x92, 0xf8, 0x96, 0x4a, 0x49, 0xd2},
			EntityUniqueID: int64(1073742940),
			Username: "Janita2406",
			XUID: "2535459544282698",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "slim_2bcf94ebaffad265b8b1643981c867a3fb2cebf501292eb14e3c4d00b69c7e25.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "f5dcab9f-af7f-45cc-8bdb-b7c4de4fe275",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xe9, 0x8a, 0x4, 0x55, 0xa0, 0x3f, 0x38, 0xcb, 0xa5, 0xa7, 0x95, 0xa2, 0x57, 0xcd, 0xb4, 0xa5},
			EntityUniqueID: int64(1073795940),
			Username: "ANDORA987",
			XUID: "2535418852522980",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_14b59f45a3dd64c3a9a57037023041b4f8b8410a913edbfa38fd72c78827ff68.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "aa10547c-e32e-42c3-9729-d3b1b5617ad5",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xa1, 0xd5, 0x4f, 0xe9, 0xea, 0xe5, 0x35, 0x16, 0x8a, 0xdd, 0x15, 0x3b, 0x79, 0x5d, 0xe7, 0x46},
			EntityUniqueID: int64(1073891924),
			Username: "Tayson Emir",
			XUID: "2535434641506429",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "cee0555f-9ca7-4a78-810f-c05bc8b6c567",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "6482f527-c296-4c45-b01e-77af23a6ea2d",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xfb, 0x4d, 0x2b, 0xf4, 0x21, 0x17, 0x39, 0x15, 0xa4, 0x5, 0x82, 0x0, 0xd3, 0x1d, 0x1e, 0xf5},
			EntityUniqueID: int64(1073796935),
			Username: "DEVGAME901",
			XUID: "2535457001572191",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "b7279c00-672e-4d90-ac27-8b1a81ffdab3",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x20),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "3f53d766-4041-446a-85cf-80287a6ea756",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x92, 0x65, 0x48, 0x97, 0xb2, 0x45, 0x35, 0x6c, 0x93, 0x26, 0xcf, 0x65, 0x61, 0x25, 0xbf, 0x25},
			EntityUniqueID: int64(1073805920),
			Username: "Berobrine90rrr",
			XUID: "2535451520311922",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "fc595d42-09e9-4ff7-adbe-25341c4a492e",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "93e1106f-aca3-4c57-96cd-61fa8bc4b38a",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xe0, 0x32, 0x88, 0x7e, 0xd7, 0xd8, 0x3b, 0xcd, 0xa5, 0x56, 0x94, 0x4b, 0xed, 0xbb, 0x9f, 0xa4},
			EntityUniqueID: int64(1073935907),
			Username: "AYUSHKILL36",
			XUID: "2535406144163055",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_7fd72bb3c8f6bab509b7af7af7ad48a296eeeb7264319330ff9630362e71f639.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "d9be8ffe-25d0-48e7-8e47-f54aef3780cc",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xf8, 0x21, 0x67, 0x7c, 0x5c, 0xa9, 0x32, 0x6c, 0x9d, 0xc8, 0x2a, 0xd7, 0x7, 0x20, 0xf7, 0xdc},
			EntityUniqueID: int64(1073824927),
			Username: "Enderman7433",
			XUID: "2535427042353443",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "slim_47bdc157a0ecee0dedfa673973eacd0e8c84e8c228a2ac12274a276732710140.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "ff700d18-2207-495b-8927-a3067b08e24b",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x5c, 0x34, 0xb6, 0x70, 0x94, 0x52, 0x32, 0x8a, 0x97, 0x7, 0x9f, 0x83, 0x55, 0xd7, 0x13, 0x2c},
			EntityUniqueID: int64(1073833930),
			Username: "GN Knight2376",
			XUID: "2535471006036665",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_9ec2f947d542428fdf9501279751980752a7a24e0804ec42267af7242fa97810.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "a1c1bd73-8ca6-4f4d-a1b6-d16abf04c261",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x6e, 0x54, 0x85, 0x89, 0xf3, 0xb, 0x36, 0x7e, 0x85, 0xa3, 0x2b, 0x9f, 0x30, 0x9b, 0xc1, 0x2e},
			EntityUniqueID: int64(1073846941),
			Username: "StoutAuthor9461",
			XUID: "2535465532998854",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_4f6eb8c8a6831878abdad6d0a1c7695a2e970dc7adb28ecf86de546ca6b3e4f7.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "99694af5-d737-4c11-9b88-03469293d4a5",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x80, 0xf0, 0xc, 0xae, 0xe, 0x3f, 0x33, 0x58, 0xa1, 0x4f, 0x21, 0x19, 0x55, 0x8f, 0xd4, 0xb6},
			EntityUniqueID: int64(1073891930),
			Username: "Abdulmanan2",
			XUID: "2535405291387857",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "13eb1076-6faa-42a9-ad96-d9360bcc1d33",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "c3e3cf07-1f5b-40cf-89c0-ef8f192f18ce",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x5d, 0x47, 0x41, 0x98, 0x44, 0x92, 0x33, 0x9e, 0x9b, 0x29, 0x2b, 0xe5, 0xe3, 0x91, 0x62, 0x84},
			EntityUniqueID: int64(1073754825),
			Username: "Thunder86212",
			XUID: "2535460383343199",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "5a6d5ab8-33b7-40e1-a843-bfeb0a7253f9",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "046abc43-e739-4fb2-ac0d-edae37bf707d",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x53, 0x70, 0xbc, 0x9d, 0x81, 0xee, 0x38, 0x16, 0xaa, 0xb6, 0x2d, 0xc3, 0xe5, 0xb6, 0xcb, 0x4e},
			EntityUniqueID: int64(1073783924),
			Username: "SiennaBead44280",
			XUID: "2535460799977502",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "classic_0c724c99a76f6188305543b67b1e1324e14ed69305787e8e3333b7bef421c625.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "2b154c4f-4106-498a-84f2-52d517bd9f04",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xef, 0xa9, 0x6c, 0x8, 0x3f, 0xe1, 0x39, 0x4f, 0x9c, 0xb, 0x92, 0xf, 0xb1, 0x3c, 0x50, 0xdd},
			EntityUniqueID: int64(1073899930),
			Username: "SquareAcorn466",
			XUID: "2535455503294395",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "b7e65260-e8c3-4940-88f7-7b9fdffa0eb5",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "53cf0453-9ac6-4d45-8496-a798cfef1282",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x1b, 0xbe, 0x3a, 0x1e, 0x20, 0xe1, 0x39, 0xd2, 0x9e, 0xd9, 0xee, 0x4, 0xd8, 0x16, 0x19, 0xb3},
			EntityUniqueID: int64(1073822927),
			Username: "HesuIsBack",
			XUID: "2535448513862810",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "slim_6bf9371034e448f9da6b5a7d34cc970093a1bf324bc6a76fe22050ef40b21516.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "11f456db-f935-4100-ba39-53cc3675f806",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x19, 0xdd, 0xd8, 0x3e, 0xe3, 0x8d, 0x30, 0xca, 0x93, 0x0, 0x44, 0x98, 0xaa, 0x6b, 0x28, 0x16},
			EntityUniqueID: int64(1073834936),
			Username: "PrincelyConch64",
			XUID: "2535454908866534",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "e6d3d1d3-8c67-42e3-bccb-320f927a8674",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "99db41e5-15c3-4adc-866a-bfd4fdc4d520",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x7c, 0x47, 0x6f, 0xf9, 0x7f, 0x76, 0x3b, 0x47, 0x84, 0x3, 0x21, 0x1b, 0x48, 0xd4, 0x6d, 0xa6},
			EntityUniqueID: int64(1073841932),
			Username: "YaroslavKam",
			XUID: "2535467643716686",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "slim_0b5a371403bac98c6556d7209f03277434e057c8efd12bd85961466cacd28785.dat",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "882b857a-2a1b-4198-bd79-0438ca57e760",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.ItemComponent{
	Items: []protocol.ItemComponentEntry{
		protocol.ItemComponentEntry{
			Name: "lifeboat:iron_hammer",
			Data: map[string]any{
				"components": map[string]any{
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "q.any_tag('stone', 'metal', 'diamond_pick_diggable')",
								},
								"use_efficiency": int32(1),
								"speed": int32(4),
							},
							map[string]any{
								"block": "minecraft:lapis_block",
								"speed": int32(4),
							},
							map[string]any{
								"block": "minecraft:obsidian",
								"speed": int32(4),
							},
							map[string]any{
								"block": "minecraft:stonebrick",
								"speed": int32(4),
							},
							map[string]any{
								"block": "minecraft:redstone_block",
								"speed": int32(4),
							},
							map[string]any{
								"block": "minecraft:diamond_block",
								"speed": int32(4),
							},
							map[string]any{
								"speed": int32(4),
								"block": "minecraft:quartz_block",
							},
							map[string]any{
								"block": "minecraft:glowstone",
								"speed": int32(4),
							},
							map[string]any{
								"block": "minecraft:emerald_block",
								"speed": int32(4),
							},
						},
					},
					"item_properties": map[string]any{
						"use_duration": int32(32),
						"can_destroy_in_creative": uint8(0x1),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:iron_hammer",
							},
						},
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
						"hand_equipped": uint8(0x1),
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(251),
					},
					"minecraft:render_offsets": map[string]any{
						"value": "tools",
					},
				},
				"minecraft:identifier": int16(3000),
				"minecraft:display_name": map[string]any{
					"value": "§9Iron Hammer",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:tnt_pickaxe",
			Data: map[string]any{
				"components": map[string]any{
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"use_efficiency": int32(1),
								"speed": int32(6),
								"block": map[string]any{
									"tags": "q.any_tag('stone', 'metal', 'diamond_pick_diggable')",
								},
							},
							map[string]any{
								"block": "minecraft:lapis_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:obsidian",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:stonebrick",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:redstone_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:diamond_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:quartz_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:glowstone",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:emerald_block",
								"speed": int32(6),
							},
						},
					},
					"item_properties": map[string]any{
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:tnt_pickaxe",
							},
						},
						"use_duration": int32(32),
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(251),
					},
					"minecraft:render_offsets": map[string]any{
						"value": "tools",
					},
				},
				"minecraft:identifier": int16(3001),
				"minecraft:display_name": map[string]any{
					"value": "§cT§fN§cT§f Pickaxe",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:bedrock_pickaxe",
			Data: map[string]any{
				"components": map[string]any{
					"item_properties": map[string]any{
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
						"use_duration": int32(32),
						"use_animation": int32(0),
						"max_stack_size": int32(1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:bedrock_pickaxe",
							},
						},
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(251),
					},
					"minecraft:render_offsets": map[string]any{
						"value": "tools",
					},
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "q.any_tag('stone', 'metal', 'diamond_pick_diggable')",
								},
								"use_efficiency": int32(1),
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:lapis_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:obsidian",
								"speed": int32(6),
							},
							map[string]any{
								"speed": int32(6),
								"block": "minecraft:stonebrick",
							},
							map[string]any{
								"block": "minecraft:redstone_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:diamond_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:quartz_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:glowstone",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:emerald_block",
								"speed": int32(6),
							},
						},
					},
				},
				"minecraft:identifier": int16(10009),
				"minecraft:display_name": map[string]any{
					"value": "§r§7Bedrock§a Pickaxe",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:dupe_pickaxe",
			Data: map[string]any{
				"minecraft:identifier": int16(10008),
				"minecraft:display_name": map[string]any{
					"value": "§r§bDupe§a Pickaxe",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
				"components": map[string]any{
					"item_properties": map[string]any{
						"use_duration": int32(32),
						"use_animation": int32(0),
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
						"animated_in_toolbar": uint8(0x1),
						"allow_off_hand": uint8(0x0),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:duplication_pickaxe",
							},
						},
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(251),
					},
					"minecraft:render_offsets": map[string]any{
						"value": "tools",
					},
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "q.any_tag('stone', 'metal', 'diamond_pick_diggable')",
								},
								"use_efficiency": int32(1),
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:lapis_block",
								"speed": int32(6),
							},
							map[string]any{
								"speed": int32(6),
								"block": "minecraft:obsidian",
							},
							map[string]any{
								"block": "minecraft:stonebrick",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:redstone_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:diamond_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:quartz_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:glowstone",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:emerald_block",
								"speed": int32(6),
							},
						},
					},
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:jackhammer",
			Data: map[string]any{
				"components": map[string]any{
					"item_properties": map[string]any{
						"use_duration": int32(32),
						"use_animation": int32(0),
						"max_stack_size": int32(1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:jack_hammer",
							},
						},
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(250),
					},
				},
				"minecraft:identifier": int16(10010),
				"minecraft:display_name": map[string]any{
					"value": "§r§6Jackhammer",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:thors_hammer",
			Data: map[string]any{
				"minecraft:display_name": map[string]any{
					"value": "§6THORS §3Hammer",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
				"components": map[string]any{
					"minecraft:durability": map[string]any{
						"max_durability": int32(175),
					},
					"item_properties": map[string]any{
						"animated_in_toolbar": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:thors_hammer",
							},
						},
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"use_duration": int32(32),
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
					},
				},
				"minecraft:identifier": int16(10006),
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:warden_wand",
			Data: map[string]any{
				"components": map[string]any{
					"minecraft:durability": map[string]any{
						"max_durability": int32(250),
					},
					"item_properties": map[string]any{
						"use_duration": int32(32),
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
						"animated_in_toolbar": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:warden_wand",
							},
						},
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
					},
					"minecraft:render_offsets": map[string]any{
						"main_hand": map[string]any{
							"first_person": map[string]any{
								"scale": []any{0.009765625, 0.009765625, 0.009765625,},
							},
							"third_person": map[string]any{
								"scale": []any{0.0234375, 0.0234375, 0.0234375,},
							},
						},
						"off_hand": map[string]any{
							"first_person": map[string]any{
								"scale": []any{0.0234375, 0.0234375, 0.0234375,},
							},
							"third_person": map[string]any{
								"scale": []any{0.0234375, 0.0234375, 0.0234375,},
							},
						},
					},
				},
				"minecraft:identifier": int16(10014),
				"minecraft:display_name": map[string]any{
					"value": "§bWarden §3Wand",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:hand_drill",
			Data: map[string]any{
				"components": map[string]any{
					"minecraft:durability": map[string]any{
						"max_durability": int32(100),
					},
					"minecraft:render_offsets": map[string]any{
						"value": "tools",
					},
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "q.any_tag('stone', 'metal', 'diamond_pick_diggable')",
								},
								"use_efficiency": int32(1),
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:lapis_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:obsidian",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:stonebrick",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:redstone_block",
								"speed": int32(6),
							},
							map[string]any{
								"speed": int32(6),
								"block": "minecraft:diamond_block",
							},
							map[string]any{
								"block": "minecraft:quartz_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:glowstone",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:emerald_block",
								"speed": int32(6),
							},
						},
					},
					"item_properties": map[string]any{
						"hand_equipped": uint8(0x1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:hand_drill",
							},
						},
						"use_duration": int32(32),
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"max_stack_size": int32(1),
					},
				},
				"minecraft:identifier": int16(11001),
				"minecraft:display_name": map[string]any{
					"value": "§r§6Hand Drill",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:creeper_pickaxe",
			Data: map[string]any{
				"minecraft:identifier": int16(10011),
				"minecraft:display_name": map[string]any{
					"value": "§r§aCreeper§a Pickaxe",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
				"components": map[string]any{
					"item_properties": map[string]any{
						"allow_off_hand": uint8(0x0),
						"hand_equipped": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:creeper_pickaxe",
							},
						},
						"use_duration": int32(32),
						"use_animation": int32(0),
						"can_destroy_in_creative": uint8(0x1),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
					},
					"minecraft:render_offsets": map[string]any{
						"main_hand": map[string]any{
							"first_person": map[string]any{
								"scale": []any{0.01953125, 0.01953125, 0.01953125,},
							},
							"third_person": map[string]any{
								"scale": []any{0.046875, 0.046875, 0.046875,},
							},
						},
						"off_hand": map[string]any{
							"first_person": map[string]any{
								"scale": []any{0.046875, 0.046875, 0.046875,},
							},
							"third_person": map[string]any{
								"scale": []any{0.046875, 0.046875, 0.046875,},
							},
						},
						"value": "tools",
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(251),
					},
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "q.any_tag('stone', 'metal', 'diamond_pick_diggable')",
								},
								"use_efficiency": int32(1),
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:lapis_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:obsidian",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:stonebrick",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:redstone_block",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:diamond_block",
								"speed": int32(6),
							},
							map[string]any{
								"speed": int32(6),
								"block": "minecraft:quartz_block",
							},
							map[string]any{
								"block": "minecraft:glowstone",
								"speed": int32(6),
							},
							map[string]any{
								"block": "minecraft:emerald_block",
								"speed": int32(6),
							},
						},
					},
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:omnitool",
			Data: map[string]any{
				"components": map[string]any{
					"item_properties": map[string]any{
						"use_animation": int32(0),
						"animated_in_toolbar": uint8(0x1),
						"use_duration": int32(32),
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"hand_equipped": uint8(0x1),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:omnitool",
							},
						},
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(600),
					},
					"minecraft:render_offsets": map[string]any{
						"value": "tools",
					},
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "true",
								},
								"use_efficiency": int32(1),
								"speed": int32(6),
							},
						},
					},
				},
				"minecraft:identifier": int16(10016),
				"minecraft:display_name": map[string]any{
					"value": "§l§cOmniTool",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:hacker_pickaxe",
			Data: map[string]any{
				"components": map[string]any{
					"minecraft:digger": map[string]any{
						"use_efficiency": uint8(0x1),
						"destroy_speeds": []any{
							map[string]any{
								"block": map[string]any{
									"tags": "true",
								},
								"use_efficiency": int32(1),
								"speed": int32(10000),
							},
						},
					},
					"item_properties": map[string]any{
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"foil": uint8(0x1),
						"use_duration": int32(32),
						"hand_equipped": uint8(0x1),
						"animated_in_toolbar": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:hacker_pickaxe",
							},
						},
						"use_animation": int32(0),
					},
					"minecraft:render_offsets": map[string]any{
						"main_hand": map[string]any{
							"first_person": map[string]any{
								"scale": []any{0.009765625, 0.009765625, 0.009765625,},
							},
							"third_person": map[string]any{
								"scale": []any{0.0234375, 0.0234375, 0.0234375,},
							},
						},
						"off_hand": map[string]any{
							"first_person": map[string]any{
								"scale": []any{0.0234375, 0.0234375, 0.0234375,},
							},
							"third_person": map[string]any{
								"scale": []any{0.0234375, 0.0234375, 0.0234375,},
							},
						},
						"value": "tools",
					},
					"minecraft:durability": map[string]any{
						"max_durability": int32(1750),
					},
				},
				"minecraft:identifier": int16(10012),
				"minecraft:display_name": map[string]any{
					"value": "§r§2Hacker§f Pickaxe",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:sm_ender_backpack_item",
			Data: map[string]any{
				"components": map[string]any{
					"item_properties": map[string]any{
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
						"can_destroy_in_creative": uint8(0x1),
						"animated_in_toolbar": uint8(0x1),
						"use_duration": int32(32),
						"hand_equipped": uint8(0x1),
						"max_stack_size": int32(64),
						"mining_speed": float32(6),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:sm_ender_backpack_item",
							},
						},
					},
				},
				"minecraft:identifier": int16(3010),
				"minecraft:display_name": map[string]any{
					"value": "§aEnder§5 Backpack",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:ground_mine",
			Data: map[string]any{
				"components": map[string]any{
					"item_properties": map[string]any{
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:ground_mine",
							},
						},
						"hand_equipped": uint8(0x1),
						"max_stack_size": int32(1),
						"animated_in_toolbar": uint8(0x1),
						"can_destroy_in_creative": uint8(0x1),
						"mining_speed": float32(6),
						"use_duration": int32(32),
						"use_animation": int32(0),
						"allow_off_hand": uint8(0x0),
					},
				},
				"minecraft:identifier": int16(11345),
				"minecraft:display_name": map[string]any{
					"value": "Land Mine",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
			},
		},
		protocol.ItemComponentEntry{
			Name: "lifeboat:alarm",
			Data: map[string]any{
				"minecraft:display_name": map[string]any{
					"value": "Alarm",
				},
				"minecraft:on_use": map[string]any{
					"on_use": uint8(0x1),
				},
				"minecraft:on_use_on": map[string]any{
					"on_use_on": uint8(0x1),
				},
				"components": map[string]any{
					"item_properties": map[string]any{
						"use_animation": int32(0),
						"can_destroy_in_creative": uint8(0x1),
						"max_stack_size": int32(1),
						"mining_speed": float32(6),
						"animated_in_toolbar": uint8(0x1),
						"use_duration": int32(32),
						"allow_off_hand": uint8(0x0),
						"hand_equipped": uint8(0x1),
						"minecraft:icon": map[string]any{
							"textures": map[string]any{
								"default": "lifeboat:alarm",
							},
						},
					},
				},
				"minecraft:identifier": int16(11346),
			},
		},
	},
}


*packet.GameRulesChanged{
	GameRules: []protocol.GameRule{
		protocol.GameRule{
			Name: "showcoordinates",
			CanBeModifiedByPlayer: false,
			Value: false,
		},
		protocol.GameRule{
			Name: "naturalregeneration",
			CanBeModifiedByPlayer: false,
			Value: false,
		},
		protocol.GameRule{
			Name: "dodaylightcycle",
			CanBeModifiedByPlayer: false,
			Value: false,
		},
	},
}


*packet.UpdateAttributes{
	EntityRuntimeID: uint64(0x40015828),
	Attributes: []protocol.Attribute{
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:health",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:knockback_resistance",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:movement",
				Value: float32(0.1),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0.1),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:absorption",
				Value: float32(0),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.hunger",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.saturation",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.level",
				Value: float32(0),
				Max: float32(24791),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.experience",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
	},
	Tick: uint64(0x0),
}


*packet.ChunkRadiusUpdated{
	ChunkRadius: int32(8),
}


*packet.NetworkChunkPublisherUpdate{
	Position: protocol.BlockPos{-512, 10, -512},
	Radius: uint32(0x80),
	SavedChunks: []protocol.ChunkPos{},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-30, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-35, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-30, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-35, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -30},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -30},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -35},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -35},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x7),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x53, 0x70, 0xbc, 0x9d, 0x81, 0xee, 0x38, 0x16, 0xaa, 0xb6, 0x2d, 0xc3, 0xe5, 0xb6, 0xcb, 0x4e},
	Username: "SiennaBead44280",
	EntityRuntimeID: uint64(0x4000a474),
	PlatformChatID: "",
	Position: mgl32.Vec3{-511.9968, 9.42, -498.343},
	Velocity: mgl32.Vec3{0, 0.42, 0},
	Pitch: float32(11.808899),
	Yaw: float32(357.06976),
	HeadYaw: float32(357.06976),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x6: int64(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
		0x25: int64(-1),
		0x5: int64(-1),
		0x54: "",
		0x8: int32(0),
		0x36: float32(1.8),
		0x4: "§eSiennaBead44280§r",
		0x7: int16(300),
		0x2a: int16(300),
		0x3: uint8(0x0),
		0x0: int64(844459290411016),
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073783924),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000a474),
	EntityMetadata: map[uint32]any{
		0x4: "§eSiennaBead44280§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000a474),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000a474),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.MoveActorAbsolute{
	EntityRuntimeID: uint64(0x4000a474),
	Flags: uint8(0x0),
	Position: mgl32.Vec3{-511.9771, 11.3742, -498.0534},
	Rotation: mgl32.Vec3{11.25, 355.78125, 355.78125},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-30, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-35, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-30, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-35, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -30},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -30},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -35},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -35},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-30, -30},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-35, -30},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-30, -35},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x7),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-35, -35},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.MoveActorAbsolute{
	EntityRuntimeID: uint64(0x4000a474),
	Flags: uint8(0x0),
	Position: mgl32.Vec3{-511.9368, 11.7871, -497.4761},
	Rotation: mgl32.Vec3{11.25, 355.78125, 355.78125},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-29, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-36, -32},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-29, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xb),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-36, -33},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.MoveActorAbsolute{
	EntityRuntimeID: uint64(0x4000a474),
	Flags: uint8(0x0),
	Position: mgl32.Vec3{-511.9163, 11.8702, -497.1882},
	Rotation: mgl32.Vec3{11.25, 355.78125, 355.78125},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -29},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xc),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -29},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xc),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-32, -36},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-33, -36},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x5),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-29, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x6),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-36, -31},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x7),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-29, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xb),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-36, -34},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x7),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xa9, 0x5e, 0xbb, 0x3e, 0x96, 0x56, 0x3f, 0x1a, 0x8f, 0x23, 0x23, 0xe0, 0x85, 0xff, 0x43, 0x18},
	Username: "Vinnysh8851",
	EntityRuntimeID: uint64(0x400013e8),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x0: int64(844459290411008),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
		0x6: int64(0),
		0x25: int64(-1),
		0x4: "Vinnysh8851",
		0x9: uint8(0x0),
		0x7: int16(300),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x3: uint8(0x0),
		0x2a: int16(300),
		0x54: "",
		0x51: uint8(0x1),
		0x5: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073746920),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x400013e8),
	EntityMetadata: map[uint32]any{
		0x4: "Vinnysh8851",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x400013e8),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x400013e8),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xa9, 0x5e, 0xbb, 0x3e, 0x96, 0x56, 0x3f, 0x1a, 0x8f, 0x23, 0x23, 0xe0, 0x85, 0xff, 0x43, 0x18},
			EntityUniqueID: int64(1073746920),
			Username: "Vinnysh8851",
			XUID: "2535436133630488",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "3580a438-daff-4a70-91d3-0516c017f342",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "0316ad5f-f53b-483b-b6c1-3c6a812237b3",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x3f, 0xb2, 0x62, 0xdd, 0xae, 0x3, 0x31, 0x61, 0xb1, 0x9b, 0x92, 0xf8, 0x96, 0x4a, 0x49, 0xd2},
	Username: "Janita2406",
	EntityRuntimeID: uint64(0x4000045c),
	PlatformChatID: "",
	Position: mgl32.Vec3{-528.1433, 9.5, -495.4434},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(-4.8506927),
	Yaw: float32(112.2937),
	HeadYaw: float32(112.2937),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x54: "",
		0x0: int64(844459290411008),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x2a: int16(300),
		0x25: int64(-1),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x4: "§eJanita2406§r",
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x26: float32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073742940),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000045c),
	EntityMetadata: map[uint32]any{
		0x4: "§eJanita2406§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000045c),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000045c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x23),
	Position: mgl32.Vec3{-511.7927, 9.1213, -495.4701},
	ExtraData: int32(11816),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x23),
	Position: mgl32.Vec3{-511.7728, 9, -495.1849},
	ExtraData: int32(11816),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x23),
	Position: mgl32.Vec3{-528.7578, 9.0359, -495.4032},
	ExtraData: int32(13884),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x23),
	Position: mgl32.Vec3{-528.8881, 9, -495.3966},
	ExtraData: int32(13884),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x4, 0x7a, 0x81, 0x5d, 0xc9, 0x46, 0x35, 0x99, 0x86, 0x5, 0x27, 0x91, 0x65, 0x37, 0x13, 0xb2},
	Username: "TungNCV",
	EntityRuntimeID: uint64(0x4002e2b7),
	PlatformChatID: "",
	Position: mgl32.Vec3{-496.0112, 6, -561.3365},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(25.281967),
	Yaw: float32(27.197433),
	HeadYaw: float32(27.197433),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x6: int64(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x8: int32(0),
		0x26: float32(1),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x4: "§eTungNCV§r",
		0x54: "",
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073930935),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4002e2b7),
	EntityMetadata: map[uint32]any{
		0x4: "§eTungNCV§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4002e2b7),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4002e2b7),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.MoveActorAbsolute{
	EntityRuntimeID: uint64(0x4002e2b7),
	Flags: uint8(0x1),
	Position: mgl32.Vec3{-497.5811, 7.6835, -560.7089},
	Rotation: mgl32.Vec3{39.375, 56.25, 56.25},
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4002e2b7),
	EntityMetadata: map[uint32]any{
		0x0: int64(844459290411016),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MoveActorAbsolute{
	EntityRuntimeID: uint64(0x4000045c),
	Flags: uint8(0x1),
	Position: mgl32.Vec3{-530.0156, 10.621, -495.5709},
	Rotation: mgl32.Vec3{352.96875, 140.625, 140.625},
}


*packet.MoveActorAbsolute{
	EntityRuntimeID: uint64(0x4000a474),
	Flags: uint8(0x0),
	Position: mgl32.Vec3{-511.6099, 11.6454, -492.2808},
	Rotation: mgl32.Vec3{11.25, 355.78125, 355.78125},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -29},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-34, -29},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{-31, -36},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x7),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x55, 0x7e, 0x88, 0xa5, 0xd0, 0xbb, 0x37, 0x72, 0xb3, 0x92, 0xa1, 0x84, 0xc3, 0x4b, 0x2d, 0xd},
			EntityUniqueID: int64(54),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "GameSelector",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x70, 0x75, 0x6c, 0x74, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "6c509bb9-bd3f-4b55-a7dd-213e1d5b4e63",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x55, 0x7e, 0x88, 0xa5, 0xd0, 0xbb, 0x37, 0x72, 0xb3, 0x92, 0xa1, 0x84, 0xc3, 0x4b, 0x2d, 0xd},
	Username: "",
	EntityRuntimeID: uint64(0x36),
	PlatformChatID: "",
	Position: mgl32.Vec3{-504, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-130),
	HeadYaw: float32(-130),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x35: float32(0.6),
		0x5: int64(-1),
		0x36: float32(1.8),
		0x3: uint8(0x0),
		0x2a: int16(300),
		0x26: float32(1),
		0x25: int64(-1),
		0x6: int64(0),
		0x4: "",
		0x9: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x0: int64(844459289886720),
		0x54: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(54),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x36),
	EntityMetadata: map[uint32]any{
		0x4: "§dGame Selector",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x36),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x36),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x55, 0x7e, 0x88, 0xa5, 0xd0, 0xbb, 0x37, 0x72, 0xb3, 0x92, 0xa1, 0x84, 0xc3, 0x4b, 0x2d, 0xd},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x9a, 0x0, 0x69, 0xbe, 0xb3, 0x6c, 0x3d, 0x3d, 0xa4, 0xc5, 0x4, 0x79, 0xcf, 0x26, 0xd3, 0xb3},
	Username: "Jelollxyanto",
	EntityRuntimeID: uint64(0x40029877),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x4: "§eJelollxyanto§r",
		0x54: "",
		0x9: uint8(0x0),
		0x7: int16(300),
		0x35: float32(0.6),
		0x6: int64(0),
		0x5: int64(-1),
		0x0: int64(844459290411008),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x26: float32(1),
		0x25: int64(-1),
		0x3: uint8(0x0),
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073911927),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40029877),
	EntityMetadata: map[uint32]any{
		0x4: "§eJelollxyanto§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40029877),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40029877),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x92, 0x65, 0x48, 0x97, 0xb2, 0x45, 0x35, 0x6c, 0x93, 0x26, 0xcf, 0x65, 0x61, 0x25, 0xbf, 0x25},
	Username: "Berobrine90rrr",
	EntityRuntimeID: uint64(0x4000fa60),
	PlatformChatID: "",
	Position: mgl32.Vec3{-511.0559, 10, -503.609},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(13.750397),
	Yaw: float32(354.04346),
	HeadYaw: float32(354.04346),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x54: "",
		0x7: int16(300),
		0x2a: int16(300),
		0x36: float32(1.8),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x25: int64(-1),
		0x5: int64(-1),
		0x4: "§eBerobrine90rrr§r",
		0x0: int64(844459290411008),
		0x51: uint8(0x1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073805920),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000fa60),
	EntityMetadata: map[uint32]any{
		0x4: "§eBerobrine90rrr§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000fa60),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000fa60),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x80, 0xf0, 0xc, 0xae, 0xe, 0x3f, 0x33, 0x58, 0xa1, 0x4f, 0x21, 0x19, 0x55, 0x8f, 0xd4, 0xb6},
	Username: "Abdulmanan2",
	EntityRuntimeID: uint64(0x40024a5a),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(360),
	HeadYaw: float32(360),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x6: int64(0),
		0x54: "",
		0x25: int64(-1),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x7: int16(300),
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x36: float32(1.8),
		0x4: "§eAbdulmanan2§r",
		0x9: uint8(0x0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073891930),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40024a5a),
	EntityMetadata: map[uint32]any{
		0x4: "§eAbdulmanan2§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40024a5a),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40024a5a),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x1b, 0xbe, 0x3a, 0x1e, 0x20, 0xe1, 0x39, 0xd2, 0x9e, 0xd9, 0xee, 0x4, 0xd8, 0x16, 0x19, 0xb3},
	Username: "HesuIsBack",
	EntityRuntimeID: uint64(0x40013ccf),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x4: "§eHesuIsBack§r",
		0x54: "",
		0x3: uint8(0x0),
		0x8: int32(0),
		0x51: uint8(0x1),
		0x26: float32(1),
		0x6: int64(0),
		0x5: int64(-1),
		0x0: int64(844459290476544),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x25: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073822927),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40013ccf),
	EntityMetadata: map[uint32]any{
		0x4: "§eHesuIsBack§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40013ccf),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40013ccf),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x19, 0xdd, 0xd8, 0x3e, 0xe3, 0x8d, 0x30, 0xca, 0x93, 0x0, 0x44, 0x98, 0xaa, 0x6b, 0x28, 0x16},
	Username: "PrincelyConch64",
	EntityRuntimeID: uint64(0x40016bb8),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x6: int64(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x26: float32(1),
		0x54: "",
		0x0: int64(844459290476544),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x4: "§ePrincelyConch64§r",
		0x3: uint8(0x0),
		0x5: int64(-1),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073834936),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40016bb8),
	EntityMetadata: map[uint32]any{
		0x4: "§ePrincelyConch64§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40016bb8),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40016bb8),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xc4, 0xe8, 0x26, 0x59, 0x4e, 0xe7, 0x3a, 0xff, 0xa9, 0x91, 0xa2, 0xaa, 0xb, 0x96, 0xc, 0x97},
	Username: "LeapingBirch996",
	EntityRuntimeID: uint64(0x40001bc1),
	PlatformChatID: "",
	Position: mgl32.Vec3{-506.2513, 10, -506.3802},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(3.761673),
	Yaw: float32(354.6543),
	HeadYaw: float32(354.6543),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x3: uint8(0x0),
		0x36: float32(1.8),
		0x26: float32(1),
		0x6: int64(0),
		0x54: "",
		0x0: int64(844459290411008),
		0x8: int32(0),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x9: uint8(0x0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x5: int64(-1),
		0x4: "§eLeapingBirch996§r",
		0x7: int16(300),
		0x25: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073748929),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40001bc1),
	EntityMetadata: map[uint32]any{
		0x4: "§eLeapingBirch996§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40001bc1),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40001bc1),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x7c, 0x47, 0x6f, 0xf9, 0x7f, 0x76, 0x3b, 0x47, 0x84, 0x3, 0x21, 0x1b, 0x48, 0xd4, 0x6d, 0xa6},
	Username: "YaroslavKam",
	EntityRuntimeID: uint64(0x4001870c),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512, 10, -512},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x54: "",
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x26: float32(1),
		0x5: int64(-1),
		0x6: int64(0),
		0x3: uint8(0x0),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x25: int64(-1),
		0x4: "§eYaroslavKam§r",
		0x0: int64(844459290476544),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073841932),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4001870c),
	EntityMetadata: map[uint32]any{
		0x4: "§eYaroslavKam§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4001870c),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4001870c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddActor{
	EntityUniqueID: int64(43),
	EntityRuntimeID: uint64(0x2b),
	EntityType: "lifeboat:jeep",
	Position: mgl32.Vec3{-522, 9, -500},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(225),
	HeadYaw: float32(225),
	BodyYaw: float32(225),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x4: "§l§6Uber VIP\n§l§7575 \ue102\n§6VIP in all games\n§6All Access",
		0x7: int16(300),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x36: float32(2),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x25: int64(-1),
		0x6: int64(0),
		0x54: "",
		0x0: int64(281509336530944),
		0x9: uint8(0x0),
		0x2: int32(1),
		0x35: float32(1.5),
		0x26: float32(1),
		0x2b: int32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x41, 0x5f, 0x85, 0xab, 0xf5, 0x34, 0x38, 0xcd, 0xac, 0xa9, 0xaf, 0xf, 0x7e, 0x99, 0x7f, 0x5c},
			EntityUniqueID: int64(58),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "ShopTransfer",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "ebcfd719-f941-4f1d-a60f-4e1134aea79e",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x41, 0x5f, 0x85, 0xab, 0xf5, 0x34, 0x38, 0xcd, 0xac, 0xa9, 0xaf, 0xf, 0x7e, 0x99, 0x7f, 0x5c},
	Username: "",
	EntityRuntimeID: uint64(0x3a),
	PlatformChatID: "",
	Position: mgl32.Vec3{-519, 10, -511.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-90),
	HeadYaw: float32(-90),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x35: float32(0.6),
		0x25: int64(-1),
		0x6: int64(0),
		0x4: "",
		0x8: int32(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(844459289886720),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x36: float32(1.8),
		0x26: float32(1),
		0x5: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(58),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x3a),
	EntityMetadata: map[uint32]any{
		0x4: "§dGo to Shop",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x3a),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x3a),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x41, 0x5f, 0x85, 0xab, 0xf5, 0x34, 0x38, 0xcd, 0xac, 0xa9, 0xaf, 0xf, 0x7e, 0x99, 0x7f, 0x5c},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddActor{
	EntityUniqueID: int64(83),
	EntityRuntimeID: uint64(0x53),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-522, 16, -500},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x36: float32(0.01),
		0x35: float32(0.01),
		0x25: int64(-1),
		0x6: int64(0),
		0x4: "§l§dUberVIP Perks\n§eUberVIP's gain access to all premium VIP-only content including:\n§7- Exclusive pets\n§7- Rideable mounts\n§7- Cosmetic accessories\n§7- Access to Prisons\n§7- Fly in the lobby\n§7- VIP chat tag\n§7- Colored chat text\n§7- Particle effects\n§7- Lobby toys\n§7- CM Build Tools\n§7- Map votes count for 2\n§7- And more",
		0x54: "",
		0x0: int64(281474976792576),
		0x26: float32(0.01),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x2: int32(11884),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xe9, 0x8a, 0x4, 0x55, 0xa0, 0x3f, 0x38, 0xcb, 0xa5, 0xa7, 0x95, 0xa2, 0x57, 0xcd, 0xb4, 0xa5},
	Username: "ANDORA987",
	EntityRuntimeID: uint64(0x4000d364),
	PlatformChatID: "",
	Position: mgl32.Vec3{-513.0648, 10, -507.588},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(359.99997),
	HeadYaw: float32(359.99997),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x26: float32(1),
		0x54: "",
		0x9: uint8(0x0),
		0x8: int32(0),
		0x2a: int16(300),
		0x25: int64(-1),
		0x0: int64(844459290411008),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x3: uint8(0x0),
		0x35: float32(0.6),
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "§eANDORA987§r",
		0x7: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073795940),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000d364),
	EntityMetadata: map[uint32]any{
		0x4: "§eANDORA987§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000d364),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000d364),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xfb, 0x4d, 0x2b, 0xf4, 0x21, 0x17, 0x39, 0x15, 0xa4, 0x5, 0x82, 0x0, 0xd3, 0x1d, 0x1e, 0xf5},
	Username: "DEVGAME901",
	EntityRuntimeID: uint64(0x4000d747),
	PlatformChatID: "",
	Position: mgl32.Vec3{-513.9501, 10, -510.3703},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(44.63188),
	Yaw: float32(160.49927),
	HeadYaw: float32(160.49927),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x4: "§eDEVGAME901§r",
		0x3: uint8(0x0),
		0x5: int64(-1),
		0x54: "",
		0x8: int32(0),
		0x7: int16(300),
		0x36: float32(1.8),
		0x26: float32(1),
		0x25: int64(-1),
		0x6: int64(0),
		0x0: int64(844459290411008),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073796935),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000d747),
	EntityMetadata: map[uint32]any{
		0x4: "§eDEVGAME901§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000d747),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000d747),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xa1, 0xd5, 0x4f, 0xe9, 0xea, 0xe5, 0x35, 0x16, 0x8a, 0xdd, 0x15, 0x3b, 0x79, 0x5d, 0xe7, 0x46},
	Username: "Tayson Emir",
	EntityRuntimeID: uint64(0x40024a54),
	PlatformChatID: "",
	Position: mgl32.Vec3{-514.7994, 9, -496.4237},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(-2.8600159),
	Yaw: float32(70.2552),
	HeadYaw: float32(70.2552),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x8: int32(0),
		0x26: float32(1),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x5: int64(-1),
		0x54: "",
		0x36: float32(1.8),
		0x25: int64(-1),
		0x4: "§eTayson Emir§r",
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073891924),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40024a54),
	EntityMetadata: map[uint32]any{
		0x4: "§eTayson Emir§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40024a54),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40024a54),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x4c, 0x43, 0x9, 0xf0, 0x86, 0x55, 0x38, 0xc9, 0xb5, 0x9e, 0x4e, 0xbd, 0x45, 0xb, 0x13, 0xd5},
			EntityUniqueID: int64(50),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "pet_token_silver",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x2e, 0x50, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "946a24e7-cc69-426b-a62f-3be477a3964a",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x4c, 0x43, 0x9, 0xf0, 0x86, 0x55, 0x38, 0xc9, 0xb5, 0x9e, 0x4e, 0xbd, 0x45, 0xb, 0x13, 0xd5},
	Username: "",
	EntityRuntimeID: uint64(0x32),
	PlatformChatID: "",
	Position: mgl32.Vec3{-511.5, 15, -518.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(160),
	HeadYaw: float32(160),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x4: "",
		0x54: "",
		0x7: int16(300),
		0x3: uint8(0x0),
		0x0: int64(281509336530944),
		0x8: int32(0),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x36: float32(1),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x35: float32(1),
		0x26: float32(0.2),
		0x5: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(50),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x32),
	EntityMetadata: map[uint32]any{
		0x4: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x32),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x32),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x4c, 0x43, 0x9, 0xf0, 0x86, 0x55, 0x38, 0xc9, 0xb5, 0x9e, 0x4e, 0xbd, 0x45, 0xb, 0x13, 0xd5},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x19, 0xd3, 0x6e, 0xa3, 0x81, 0x57, 0x35, 0xc9, 0xa6, 0x5a, 0xa7, 0x4, 0xcc, 0x96, 0xca, 0x57},
			EntityUniqueID: int64(51),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "buff_axolotl_pink",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x50, 0x65, 0x74, 0x73, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x41, 0x78, 0x6f, 0x6c, 0x6f, 0x74, 0x6c, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "787bc00a-d6e1-4563-b312-7d5ab8b862b0",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x19, 0xd3, 0x6e, 0xa3, 0x81, 0x57, 0x35, 0xc9, 0xa6, 0x5a, 0xa7, 0x4, 0xcc, 0x96, 0xca, 0x57},
	Username: "",
	EntityRuntimeID: uint64(0x33),
	PlatformChatID: "",
	Position: mgl32.Vec3{-508.5, 10, -517.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(30),
	HeadYaw: float32(30),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x26: float32(1),
		0x25: int64(-1),
		0x4: "",
		0x54: "",
		0x51: uint8(0x1),
		0x35: float32(0.4),
		0x7: int16(300),
		0x9: uint8(0x0),
		0x36: float32(2.2),
		0x5: int64(-1),
		0x6: int64(0),
		0x0: int64(281509336530944),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(51),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x33),
	EntityMetadata: map[uint32]any{
		0x4: "§l§9Buff Axolotl\n§aChange between §d12 §acolors anytime",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x33),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x33),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x19, 0xd3, 0x6e, 0xa3, 0x81, 0x57, 0x35, 0xc9, 0xa6, 0x5a, 0xa7, 0x4, 0xcc, 0x96, 0xca, 0x57},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddActor{
	EntityUniqueID: int64(53),
	EntityRuntimeID: uint64(0x35),
	EntityType: "minecraft:allay",
	Position: mgl32.Vec3{-511.5, 10.05, -518.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(281509336530944),
		0x5: int64(-1),
		0x8: int32(0),
		0x7: int16(300),
		0x9: uint8(0x0),
		0x26: float32(1),
		0x25: int64(-1),
		0x2a: int16(300),
		0x35: float32(0.7),
		0x36: float32(1.5),
		0x6: int64(0),
		0x4: "§l§bAllay \n§7Tap to buy",
		0x51: uint8(0x1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xa1, 0x8a, 0xaf, 0x5c, 0xbc, 0x81, 0x3f, 0x2d, 0xa3, 0xcc, 0x1c, 0x1, 0xff, 0x62, 0x80, 0xce},
			EntityUniqueID: int64(60),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "VipCave",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x2e, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "1a93429c-28c1-4eaf-a7b7-6f6d003a79c2",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xa1, 0x8a, 0xaf, 0x5c, 0xbc, 0x81, 0x3f, 0x2d, 0xa3, 0xcc, 0x1c, 0x1, 0xff, 0x62, 0x80, 0xce},
	Username: "",
	EntityRuntimeID: uint64(0x3c),
	PlatformChatID: "",
	Position: mgl32.Vec3{-502, 9.0625, -515.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(90),
	HeadYaw: float32(90),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x36: float32(2),
		0x35: float32(0.6),
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "",
		0x9: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x26: float32(1),
		0x25: int64(-1),
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(844459289952256),
		0x51: uint8(0x1),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(60),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x3c),
	EntityMetadata: map[uint32]any{
		0x4: "§dGo to VIP Cave",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x3c),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x3c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xa1, 0x8a, 0xaf, 0x5c, 0xbc, 0x81, 0x3f, 0x2d, 0xa3, 0xcc, 0x1c, 0x1, 0xff, 0x62, 0x80, 0xce},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddActor{
	EntityUniqueID: int64(92),
	EntityRuntimeID: uint64(0x5c),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-511.5, 14, -518.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x36: float32(0.01),
		0x35: float32(0.01),
		0x26: float32(0.01),
		0x25: int64(-1),
		0x5: int64(-1),
		0x4: "§l§dTOKEN PET SYSTEM\nThese pets will rotate in and out more often.\nInstead of buying each pet you buy tokens and\nbuy pets with tokens.",
		0x54: "",
		0x51: uint8(0x1),
		0x2: int32(11884),
		0x3: uint8(0x0),
		0x0: int64(281474976792576),
		0x6: int64(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(94),
	EntityRuntimeID: uint64(0x5e),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-511.5, 13, -518.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x3: uint8(0x0),
		0x0: int64(281474976792576),
		0x2: int32(11884),
		0x36: float32(0.01),
		0x5: int64(-1),
		0x6: int64(0),
		0x54: "",
		0x4: "",
		0x51: uint8(0x1),
		0x35: float32(0.01),
		0x26: float32(0.01),
		0x25: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x36, 0x21, 0xe3, 0x18, 0x81, 0x30, 0x34, 0xde, 0x90, 0xe0, 0xdc, 0xd6, 0xd9, 0xee, 0x4d, 0xa2},
			EntityUniqueID: int64(52),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "baby_golem",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x50, 0x65, 0x74, 0x73, 0x2e, 0x62, 0x61, 0x62, 0x79, 0x5f, 0x67, 0x6f, 0x6c, 0x65, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "ac868415-36d8-4b78-8758-37214fb59fca",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x36, 0x21, 0xe3, 0x18, 0x81, 0x30, 0x34, 0xde, 0x90, 0xe0, 0xdc, 0xd6, 0xd9, 0xee, 0x4d, 0xa2},
	Username: "",
	EntityRuntimeID: uint64(0x34),
	PlatformChatID: "",
	Position: mgl32.Vec3{-514.5, 10, -517.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(347),
	HeadYaw: float32(347),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x7: int16(300),
		0x4: "",
		0x9: uint8(0x0),
		0x25: int64(-1),
		0x51: uint8(0x1),
		0x35: float32(0.4),
		0x54: "",
		0x0: int64(281509336530944),
		0x2a: int16(300),
		0x5: int64(-1),
		0x6: int64(0),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x36: float32(1),
		0x26: float32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(52),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x34),
	EntityMetadata: map[uint32]any{
		0x4: "§l§cBaby Golem\n§7Tap to buy",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x34),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x34),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x36, 0x21, 0xe3, 0x18, 0x81, 0x30, 0x34, 0xde, 0x90, 0xe0, 0xdc, 0xd6, 0xd9, 0xee, 0x4d, 0xa2},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xef, 0xa9, 0x6c, 0x8, 0x3f, 0xe1, 0x39, 0x4f, 0x9c, 0xb, 0x92, 0xf, 0xb1, 0x3c, 0x50, 0xdd},
	Username: "SquareAcorn466",
	EntityRuntimeID: uint64(0x4002699a),
	PlatformChatID: "",
	Position: mgl32.Vec3{-512.7888, 10, -512.3915},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(4.6178284),
	Yaw: float32(8.934402),
	HeadYaw: float32(8.934402),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(584),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§fParty",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x0: int64(844459290411008),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x26: float32(1),
		0x2a: int16(300),
		0x6: int64(0),
		0x4: "§eSquareAcorn466§r",
		0x54: "",
		0x9: uint8(0x0),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x3: uint8(0x0),
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073899930),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4002699a),
	EntityMetadata: map[uint32]any{
		0x4: "§eSquareAcorn466§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4002699a),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4002699a),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddActor{
	EntityUniqueID: int64(1),
	EntityRuntimeID: uint64(0x1),
	EntityType: "lifeboat:sg_statue",
	Position: mgl32.Vec3{-493.5, 10, -503.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(270),
	HeadYaw: float32(270),
	BodyYaw: float32(270),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x36: float32(4.477612),
		0x25: int64(-1),
		0x9: uint8(0x0),
		0x5: int64(-1),
		0x6: int64(0),
		0x8: int32(0),
		0x0: int64(844459289886720),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x35: float32(2.5),
		0x26: float32(1.005),
		0x4: "§l§6Survival Games\n§a157 players\n§aTap to join",
		0x54: "",
		0x3: uint8(0x0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(2),
	EntityRuntimeID: uint64(0x2),
	EntityType: "lifeboat:za_statue",
	Position: mgl32.Vec3{-493.5, 10, -498.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(143),
	HeadYaw: float32(143),
	BodyYaw: float32(143),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x8: int32(0),
		0x36: float32(2.090909),
		0x54: "",
		0x3: uint8(0x0),
		0x25: int64(-1),
		0x5: int64(-1),
		0x4: "§l§6Zombie Apocalypse\n§a126 players\n§aTap to join",
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x35: float32(1.85),
		0x26: float32(1.1),
		0x0: int64(844459289886720),
		0x7: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(13),
	EntityRuntimeID: uint64(0xd),
	EntityType: "lifeboat:lava_survival",
	Position: mgl32.Vec3{-492.5, 10, -508.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x26: float32(0.5),
		0x54: "",
		0x0: int64(844459289886720),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x4: "§l§6Lava Survival\n§a703 players\n§aTap to join",
		0x3: uint8(0x0),
		0x8: int32(0),
		0x36: float32(10),
		0x35: float32(5),
		0x25: int64(-1),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(14),
	EntityRuntimeID: uint64(0xe),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-492.5, 16, -508.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x26: float32(0.01),
		0x4: "§l§d**§bBACK BY POPULAR DEMAND§d**",
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(281474976792576),
		0x36: float32(0.01),
		0x35: float32(0.01),
		0x25: int64(-1),
		0x5: int64(-1),
		0x6: int64(0),
		0x2: int32(11884),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(11),
	EntityRuntimeID: uint64(0xb),
	EntityType: "lifeboat:ctf_statue",
	Position: mgl32.Vec3{-529.5, 10, -498.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(90),
	HeadYaw: float32(90),
	BodyYaw: float32(90),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x8: int32(0),
		0x7: int16(300),
		0x2a: int16(300),
		0x36: float32(2.9850745),
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "§l§6Capture The Flag\n§a122 players\n§aTap to join",
		0x0: int64(844459289886720),
		0x9: uint8(0x0),
		0x51: uint8(0x1),
		0x35: float32(2.5),
		0x26: float32(1.005),
		0x54: "",
		0x3: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(15),
	EntityRuntimeID: uint64(0xf),
	EntityType: "lifeboat:oic",
	Position: mgl32.Vec3{-529.5, 9.4, -503.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(90),
	HeadYaw: float32(90),
	BodyYaw: float32(90),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x3: uint8(0x0),
		0x7: int16(300),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x35: float32(4),
		0x8: int32(0),
		0x36: float32(4.1666665),
		0x6: int64(0),
		0x4: "§l§6One in the Chamber\n§a89 players\n§aTap to join",
		0x0: int64(844459289886720),
		0x9: uint8(0x0),
		0x26: float32(0.6),
		0x25: int64(-1),
		0x5: int64(-1),
		0x54: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x6e, 0x54, 0x85, 0x89, 0xf3, 0xb, 0x36, 0x7e, 0x85, 0xa3, 0x2b, 0x9f, 0x30, 0x9b, 0xc1, 0x2e},
	Username: "StoutAuthor9461",
	EntityRuntimeID: uint64(0x40019a9d),
	PlatformChatID: "",
	Position: mgl32.Vec3{-529.902, 10, -503.0766},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(10.165405),
	Yaw: float32(73.76581),
	HeadYaw: float32(73.76581),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x4: "§eStoutAuthor9461§r",
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x26: float32(1),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x6: int64(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x7: int16(300),
		0x36: float32(1.8),
		0x5: int64(-1),
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073846941),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40019a9d),
	EntityMetadata: map[uint32]any{
		0x4: "§eStoutAuthor9461§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40019a9d),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40019a9d),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddActor{
	EntityUniqueID: int64(93),
	EntityRuntimeID: uint64(0x5d),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-493, 13, -513},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x3: uint8(0x0),
		0x51: uint8(0x1),
		0x36: float32(0.01),
		0x26: float32(0.01),
		0x25: int64(-1),
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "§l§cIT'S BACK!\n§cDue to demand we've brought it back, with updates!\n§l§dLava Survival\n\n§bGame: \n- Lava Rises and Destroys \n-Gather, prep, strategize\n- Protect yourself from lava\nand other players\n- Last one standing wins\n- Up to 30 players",
		0x0: int64(281474976792576),
		0x2: int32(11884),
		0x35: float32(0.01),
		0x54: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xa6, 0x3, 0x86, 0x39, 0x45, 0x60, 0x35, 0x89, 0xac, 0x3e, 0xad, 0xe8, 0xad, 0xf7, 0x5d, 0xb9},
	Username: "Rudra1sy",
	EntityRuntimeID: uint64(0x40017768),
	PlatformChatID: "",
	Position: mgl32.Vec3{-490.7277, 11, -522.5571},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(33.236633),
	Yaw: float32(187.59637),
	HeadYaw: float32(187.59637),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x26: float32(1),
		0x6: int64(0),
		0x0: int64(844459290411008),
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x5: int64(-1),
		0x4: "§eRudra1sy§r",
		0x3: uint8(0x0),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x54: "",
		0x9: uint8(0x0),
		0x7: int16(300),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073837928),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40017768),
	EntityMetadata: map[uint32]any{
		0x4: "§eRudra1sy§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40017768),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40017768),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x36, 0xeb, 0x5b, 0xc4, 0x47, 0xf2, 0x3b, 0x9b, 0xb7, 0x75, 0x41, 0xf6, 0xcf, 0x40, 0x7a, 0x61},
	Username: "SunShinee2408",
	EntityRuntimeID: uint64(0x4002abfc),
	PlatformChatID: "",
	Position: mgl32.Vec3{-531.3909, 9, -512.4625},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0.6175232),
	Yaw: float32(345.31964),
	HeadYaw: float32(345.31964),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(564),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§fFriends",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x2a: int16(300),
		0x4: "§eSunShinee2408§r",
		0x35: float32(0.6),
		0x25: int64(-1),
		0x6: int64(0),
		0x54: "",
		0x7: int16(300),
		0x36: float32(1.8),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x9: uint8(0x0),
		0x51: uint8(0x1),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073916924),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4002abfc),
	EntityMetadata: map[uint32]any{
		0x4: "§eSunShinee2408§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4002abfc),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4002abfc),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x5, 0x72, 0x94, 0xe1, 0xee, 0x3c, 0x3f, 0x79, 0xb0, 0xaf, 0x4a, 0x58, 0xfa, 0x57, 0x47, 0xcf},
			EntityUniqueID: int64(3),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "SkyWars",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x2e, 0x53, 0x6b, 0x79, 0x77, 0x61, 0x72, 0x73, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "cb9b4b53-c752-4935-845c-8c5a0e0ee300",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x5, 0x72, 0x94, 0xe1, 0xee, 0x3c, 0x3f, 0x79, 0xb0, 0xaf, 0x4a, 0x58, 0xfa, 0x57, 0x47, 0xcf},
	Username: "",
	EntityRuntimeID: uint64(0x3),
	PlatformChatID: "",
	Position: mgl32.Vec3{-501.5, 10, -489.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x6: int64(0),
		0x0: int64(844459289886720),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x54: "",
		0x8: int32(0),
		0x2a: int16(300),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x4: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(3),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x3),
	EntityMetadata: map[uint32]any{
		0x4: "§l§6SkyWars\n§a279 players\n§aTap to join",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x3),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x3),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x5, 0x72, 0x94, 0xe1, 0xee, 0x3c, 0x3f, 0x79, 0xb0, 0xaf, 0x4a, 0x58, 0xfa, 0x57, 0x47, 0xcf},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddActor{
	EntityUniqueID: int64(4),
	EntityRuntimeID: uint64(0x4),
	EntityType: "lifeboat:sm_statue",
	Position: mgl32.Vec3{-511, 10, -487.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-10),
	HeadYaw: float32(-10),
	BodyYaw: float32(-10),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x26: float32(2),
		0x6: int64(0),
		0x54: "",
		0x36: float32(1.5),
		0x35: float32(0.5),
		0x25: int64(-1),
		0x4: "§l§6Survival Mode\n§a2731 players\n§aTap to join",
		0x8: int32(0),
		0x7: int16(300),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x0: int64(844459289886720),
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(5),
	EntityRuntimeID: uint64(0x5),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-511, 14.25, -487.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "§l§cNEW §6OMNITOOL \n§bIron pick, shovel, axe",
		0x51: uint8(0x1),
		0x36: float32(0.01),
		0x35: float32(0.01),
		0x26: float32(0.01),
		0x25: int64(-1),
		0x2: int32(11884),
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(281474976792576),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(6),
	EntityRuntimeID: uint64(0x6),
	EntityType: "lifeboat:bedwars_statue",
	Position: mgl32.Vec3{-506.5, 10, -487},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-170),
	HeadYaw: float32(-170),
	BodyYaw: float32(-170),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x4: "§l§6BedWars\n§a944 players\n§aTap to join",
		0x7: int16(300),
		0x25: int64(-1),
		0x8: int32(0),
		0x36: float32(3),
		0x35: float32(3),
		0x6: int64(0),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
		0x51: uint8(0x1),
		0x54: "",
		0x0: int64(844459289886720),
		0x2a: int16(300),
		0x26: float32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(10),
	EntityRuntimeID: uint64(0xa),
	EntityType: "lifeboat:shepherd",
	Position: mgl32.Vec3{-497.5, 10, -494.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-225),
	HeadYaw: float32(-225),
	BodyYaw: float32(-225),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x4: "§l§6Lifeboat City w/ Adopt-A-Pet\n§a223 players\n§aTap to join",
		0x35: float32(2),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x26: float32(0.5),
		0x25: int64(-1),
		0x54: "",
		0x36: float32(5),
		0x3: uint8(0x0),
		0x0: int64(844459289886720),
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0xa),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(3020),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x0),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xe0, 0x32, 0x88, 0x7e, 0xd7, 0xd8, 0x3b, 0xcd, 0xa5, 0x56, 0x94, 0x4b, 0xed, 0xbb, 0x9f, 0xa4},
	Username: "AYUSHKILL36",
	EntityRuntimeID: uint64(0x4002f623),
	PlatformChatID: "",
	Position: mgl32.Vec3{-506.2988, 9.5, -485.0562},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(34.951584),
	Yaw: float32(152.24765),
	HeadYaw: float32(152.24765),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(532),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§eProfile & Settings",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x9: uint8(0x0),
		0x36: float32(1.8),
		0x7: int16(300),
		0x2a: int16(300),
		0x6: int64(0),
		0x4: "§eAYUSHKILL36§r",
		0x3: uint8(0x0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
		0x25: int64(-1),
		0x5: int64(-1),
		0x54: "",
		0x0: int64(844459290411008),
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073935907),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4002f623),
	EntityMetadata: map[uint32]any{
		0x4: "§eAYUSHKILL36§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4002f623),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4002f623),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x5c, 0x34, 0xb6, 0x70, 0x94, 0x52, 0x32, 0x8a, 0x97, 0x7, 0x9f, 0x83, 0x55, 0xd7, 0x13, 0x2c},
	Username: "GN Knight2376",
	EntityRuntimeID: uint64(0x400167ca),
	PlatformChatID: "",
	Position: mgl32.Vec3{-510.2292, 9.5, -485.6813},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(19.593994),
	Yaw: float32(226.71036),
	HeadYaw: float32(226.71036),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x4: "§eGN Knight2376§r",
		0x9: uint8(0x0),
		0x26: float32(1),
		0x6: int64(0),
		0x2a: int16(300),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x8: int32(0),
		0x36: float32(1.8),
		0x25: int64(-1),
		0x54: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073833930),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x400167ca),
	EntityMetadata: map[uint32]any{
		0x4: "§eGN Knight2376§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x400167ca),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x400167ca),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xf8, 0x21, 0x67, 0x7c, 0x5c, 0xa9, 0x32, 0x6c, 0x9d, 0xc8, 0x2a, 0xd7, 0x7, 0x20, 0xf7, 0xdc},
	Username: "Enderman7433",
	EntityRuntimeID: uint64(0x4001449f),
	PlatformChatID: "",
	Position: mgl32.Vec3{-506.5977, 9.5, -489.1908},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(14.59166),
	Yaw: float32(343.08936),
	HeadYaw: float32(343.08936),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x36: float32(1.8),
		0x25: int64(-1),
		0x8: int32(0),
		0x7: int16(300),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x54: "",
		0x26: float32(1),
		0x6: int64(0),
		0x4: "§eEnderman7433§r",
		0x0: int64(844459290411008),
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073824927),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4001449f),
	EntityMetadata: map[uint32]any{
		0x4: "§eEnderman7433§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4001449f),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4001449f),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x5d, 0x47, 0x41, 0x98, 0x44, 0x92, 0x33, 0x9e, 0x9b, 0x29, 0x2b, 0xe5, 0xe3, 0x91, 0x62, 0x84},
	Username: "Thunder86212",
	EntityRuntimeID: uint64(0x400032c9),
	PlatformChatID: "",
	Position: mgl32.Vec3{-506.8642, 9, -492.4879},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(360),
	HeadYaw: float32(360),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x54: "",
		0x3: uint8(0x0),
		0x35: float32(0.6),
		0x0: int64(844459290411008),
		0x7: int16(300),
		0x2a: int16(300),
		0x26: float32(1),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x25: int64(-1),
		0x4: "§eThunder86212§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073754825),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x400032c9),
	EntityMetadata: map[uint32]any{
		0x4: "§eThunder86212§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x400032c9),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x400032c9),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddActor{
	EntityUniqueID: int64(7),
	EntityRuntimeID: uint64(0x7),
	EntityType: "lifeboat:skyblock",
	Position: mgl32.Vec3{-516.75, 9.8, -487},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-90),
	HeadYaw: float32(-90),
	BodyYaw: float32(-90),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x4: "§l§6Skyblock\n§a476 players\n§aTap to join",
		0x54: "",
		0x0: int64(844459289886720),
		0x7: int16(300),
		0x35: float32(3),
		0x26: float32(0.5),
		0x6: int64(0),
		0x2a: int16(300),
		0x8: int32(0),
		0x51: uint8(0x1),
		0x36: float32(8),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(8),
	EntityRuntimeID: uint64(0x8),
	EntityType: "lifeboat:prison_statue",
	Position: mgl32.Vec3{-521.5, 9.5, -489.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-180),
	HeadYaw: float32(-180),
	BodyYaw: float32(-180),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x36: float32(5.970149),
		0x4: "§l§6Prison\n§a335 players\n§aTap to join",
		0x7: int16(300),
		0x51: uint8(0x1),
		0x25: int64(-1),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x35: float32(2.5),
		0x54: "",
		0x0: int64(844459289886720),
		0x2a: int16(300),
		0x26: float32(1.005),
		0x5: int64(-1),
		0x3: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(9),
	EntityRuntimeID: uint64(0x9),
	EntityType: "minecraft:falling_block",
	Position: mgl32.Vec3{-523, 12, -489},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	BodyYaw: float32(0),
	Attributes: []protocol.AttributeValue{},
	EntityMetadata: map[uint32]any{
		0x3: uint8(0x0),
		0x36: float32(0.01),
		0x25: int64(-1),
		0x26: float32(0.01),
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "§l§cNEW §3Warden §bWand",
		0x54: "",
		0x0: int64(281474976792576),
		0x51: uint8(0x1),
		0x35: float32(0.01),
		0x2: int32(11884),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(12),
	EntityRuntimeID: uint64(0xc),
	EntityType: "lifeboat:creative_statue",
	Position: mgl32.Vec3{-526.5, 10, -493.5},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-143),
	HeadYaw: float32(-143),
	BodyYaw: float32(-143),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x35: float32(2.5),
		0x54: "",
		0x0: int64(844459289886720),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x26: float32(0.8),
		0x25: int64(-1),
		0x5: int64(-1),
		0x4: "§l§6Creative Mode Plots\n§a516 players\n§aTap to join",
		0x2a: int16(300),
		0x6: int64(0),
		0x36: float32(4.5),
		0x3: uint8(0x0),
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x9a, 0xb1, 0xbf, 0x52, 0xf6, 0x44, 0x3d, 0x49, 0xad, 0x6f, 0x2e, 0x30, 0x69, 0xad, 0x26, 0xf2},
	Username: "MakenaN1",
	EntityRuntimeID: uint64(0x40004a39),
	PlatformChatID: "",
	Position: mgl32.Vec3{-524.1725, 9.2664, -491.4697},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(-1.2738647),
	Yaw: float32(293.2536),
	HeadYaw: float32(293.2536),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x6: int64(0),
		0x35: float32(0.6),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
		0x25: int64(-1),
		0x0: int64(844459290411008),
		0x4: "§eMakenaN1§r",
		0x54: "",
		0x9: uint8(0x0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073760825),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40004a39),
	EntityMetadata: map[uint32]any{
		0x4: "§eMakenaN1§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40004a39),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40004a39),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x1a, 0x1e, 0x70, 0x8e, 0x33, 0x67, 0x3c, 0x8a, 0x86, 0x60, 0xd, 0x27, 0x13, 0x63, 0xaa, 0x7},
	Username: "Sunny 9090909",
	EntityRuntimeID: uint64(0x40012d2c),
	PlatformChatID: "",
	Position: mgl32.Vec3{-489.6884, 12, -531.2473},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(19.97319),
	Yaw: float32(149.13623),
	HeadYaw: float32(149.13623),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x4: "§eSunny 9090909§r",
		0x0: int64(844459290411008),
		0x8: int32(0),
		0x36: float32(1.8),
		0x3: uint8(0x0),
		0x26: float32(1),
		0x54: "",
		0x9: uint8(0x0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x5: int64(-1),
		0x7: int16(300),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073818924),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x40012d2c),
	EntityMetadata: map[uint32]any{
		0x4: "§eSunny 9090909§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x40012d2c),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x40012d2c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x1f, 0x4d, 0x6, 0xc7, 0x87, 0x30, 0x3f, 0xa0, 0xa6, 0xb5, 0xea, 0x2d, 0xa1, 0xde, 0xf7, 0x6b},
	Username: "mahipon1234",
	EntityRuntimeID: uint64(0x4000b7ff),
	PlatformChatID: "",
	Position: mgl32.Vec3{-466.6638, 9.0625, -501.6603},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(20.851242),
	Yaw: float32(182.13965),
	HeadYaw: float32(182.13965),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(564),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§fFriends",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x5: int64(-1),
		0x54: "",
		0x8: int32(0),
		0x2a: int16(300),
		0x6: int64(0),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x26: float32(1),
		0x4: "§emahipon1234§r",
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x25: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073788927),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000b7ff),
	EntityMetadata: map[uint32]any{
		0x4: "§emahipon1234§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000b7ff),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000b7ff),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddActor{
	EntityUniqueID: int64(48),
	EntityRuntimeID: uint64(0x30),
	EntityType: "lifeboat:craftable_dragons1",
	Position: mgl32.Vec3{-559, 9, -484},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-135),
	HeadYaw: float32(-135),
	BodyYaw: float32(-135),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x25: int64(-1),
		0x6: int64(0),
		0x54: "",
		0x9: uint8(0x0),
		0x8: int32(0),
		0x36: float32(1.25),
		0x35: float32(1),
		0x26: float32(2),
		0x5: int64(-1),
		0x0: int64(281509336530944),
		0x7: int16(300),
		0x4: "§6§lCraftable Dragons\n§7830 \ue102\n§6Downloadable Map",
		0x3: uint8(0x0),
		0x51: uint8(0x1),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(49),
	EntityRuntimeID: uint64(0x31),
	EntityType: "lifeboat:craftable_dragons2",
	Position: mgl32.Vec3{-557, 9.5, -486},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-135),
	HeadYaw: float32(-135),
	BodyYaw: float32(-135),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x54: "",
		0x8: int32(0),
		0x36: float32(3),
		0x5: int64(-1),
		0x4: "",
		0x0: int64(281509336530944),
		0x7: int16(300),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x35: float32(2),
		0x26: float32(0.75),
		0x25: int64(-1),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xfe, 0x18, 0x5e, 0x90, 0x39, 0x34, 0x36, 0x28, 0xb4, 0x5c, 0x89, 0xda, 0x1a, 0x6b, 0x65, 0xcf},
	Username: "SurefireLoki5",
	EntityRuntimeID: uint64(0x4001d91c),
	PlatformChatID: "",
	Position: mgl32.Vec3{-475.95, 23, -553.1113},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(42.83574),
	Yaw: float32(20.9469),
	HeadYaw: float32(20.9469),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x4: "§eSurefireLoki5§r",
		0x0: int64(844459290411008),
		0x5: int64(-1),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x54: "",
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x7: int16(300),
		0x36: float32(1.8),
		0x8: int32(0),
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073862940),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4001d91c),
	EntityMetadata: map[uint32]any{
		0x4: "§eSurefireLoki5§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4001d91c),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4001d91c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xfb, 0xd7, 0x1d, 0xdf, 0x65, 0xb5, 0x3e, 0xd1, 0x9e, 0x37, 0x1a, 0x1f, 0xc9, 0xf0, 0xfb, 0xf2},
	Username: "WorthyCrab6",
	EntityRuntimeID: uint64(0x4000c79f),
	PlatformChatID: "",
	Position: mgl32.Vec3{-454.8064, 9, -496.5345},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(20.094513),
	Yaw: float32(246.49283),
	HeadYaw: float32(246.49283),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(399),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§dNavigator",
				},
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x35: float32(0.6),
		0x5: int64(-1),
		0x9: uint8(0x0),
		0x26: float32(1),
		0x0: int64(844459290411008),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x4: "§eWorthyCrab6§r",
		0x54: "",
		0x7: int16(300),
		0x51: uint8(0x1),
		0x25: int64(-1),
		0x6: int64(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(1073792927),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x4000c79f),
	EntityMetadata: map[uint32]any{
		0x4: "§eWorthyCrab6§r",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x4000c79f),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x4000c79f),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x22, 0x3a, 0x8f, 0x47, 0x9d, 0xf0, 0x37, 0x77, 0x93, 0xcd, 0x5d, 0x1b, 0xfe, 0x18, 0x8d, 0x43},
			EntityUniqueID: int64(56),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "BackToSpawn",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x62, 0x6f, 0x61, 0x74, 0x2e, 0x4a, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "c9a55e42-957f-435b-8cdd-a841bf9ce3a6",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x22, 0x3a, 0x8f, 0x47, 0x9d, 0xf0, 0x37, 0x77, 0x93, 0xcd, 0x5d, 0x1b, 0xfe, 0x18, 0x8d, 0x43},
	Username: "",
	EntityRuntimeID: uint64(0x38),
	PlatformChatID: "",
	Position: mgl32.Vec3{-576, 9, -502},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-156),
	HeadYaw: float32(-156),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x35: float32(0.6),
		0x7: int16(300),
		0x2a: int16(300),
		0x36: float32(1.8),
		0x25: int64(-1),
		0x6: int64(0),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
		0x26: float32(1),
		0x54: "",
		0x0: int64(844459289886720),
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x4: "",
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(56),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x38),
	EntityMetadata: map[uint32]any{
		0x4: "§dReturn to Spawn",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x38),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x38),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayerList{
	ActionType: uint8(0x1),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x22, 0x3a, 0x8f, 0x47, 0x9d, 0xf0, 0x37, 0x77, 0x93, 0xcd, 0x5d, 0x1b, 0xfe, 0x18, 0x8d, 0x43},
			EntityUniqueID: int64(0),
			Username: "",
			XUID: "",
			PlatformChatID: "",
			BuildPlatform: int32(0),
			Skin: protocol.Skin{
				SkinID: "",
				PlayFabID: "",
				SkinResourcePatch: []uint8{},
				SkinImageWidth: uint32(0x0),
				SkinImageHeight: uint32(0x0),
				SkinData: []uint8{},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: false,
				CapeID: "",
				FullID: "",
				SkinColour: "",
				ArmSize: "",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: false,
				OverrideAppearance: false,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.AddActor{
	EntityUniqueID: int64(45),
	EntityRuntimeID: uint64(0x2d),
	EntityType: "lifeboat:golems_plus",
	Position: mgl32.Vec3{-565, 9, -493},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-135),
	HeadYaw: float32(-135),
	BodyYaw: float32(-135),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x26: float32(1),
		0x4: "§6§lGolems+\n§7830 \ue102\n§6Downloadable Map",
		0x2a: int16(300),
		0x25: int64(-1),
		0x0: int64(281509336530944),
		0x7: int16(300),
		0x5: int64(-1),
		0x6: int64(0),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x51: uint8(0x1),
		0x36: float32(3),
		0x35: float32(2),
		0x54: "",
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(46),
	EntityRuntimeID: uint64(0x2e),
	EntityType: "lifeboat:golems_plus2",
	Position: mgl32.Vec3{-567, 9, -493},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-135),
	HeadYaw: float32(-135),
	BodyYaw: float32(-135),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x2a: int16(300),
		0x36: float32(3),
		0x35: float32(2),
		0x3: uint8(0x0),
		0x0: int64(281509336530944),
		0x8: int32(0),
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x6: int64(0),
		0x9: uint8(0x0),
		0x26: float32(1),
		0x25: int64(-1),
		0x4: "",
		0x54: "",
		0x7: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.AddActor{
	EntityUniqueID: int64(47),
	EntityRuntimeID: uint64(0x2f),
	EntityType: "lifeboat:golems_plus3",
	Position: mgl32.Vec3{-565, 9, -491},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(-135),
	HeadYaw: float32(-135),
	BodyYaw: float32(-135),
	Attributes: []protocol.AttributeValue{
		protocol.AttributeValue{
			Name: "minecraft:health",
			Value: float32(20),
			Max: float32(20),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:follow_range",
			Value: float32(16),
			Max: float32(2048),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:knockback_resistance",
			Value: float32(0),
			Max: float32(1),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:movement",
			Value: float32(0.1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:attack_damage",
			Value: float32(1),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
		protocol.AttributeValue{
			Name: "minecraft:absorption",
			Value: float32(0),
			Max: float32(3.4028235e+38),
			Min: float32(0),
		},
	},
	EntityMetadata: map[uint32]any{
		0x0: int64(281509336530944),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x25: int64(-1),
		0x26: float32(1),
		0x4: "",
		0x54: "",
		0x7: int16(300),
		0x36: float32(3),
		0x3: uint8(0x0),
		0x35: float32(2),
		0x5: int64(-1),
		0x6: int64(0),
		0x8: int32(0),
		0x51: uint8(0x1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	EntityLinks: []protocol.EntityLink{},
}


*packet.PlayStatus{
	Status: int32(3),
}


