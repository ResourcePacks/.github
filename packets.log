*packet.RequestNetworkSettings{
	ClientProtocol: int32(685),
}


*packet.NetworkSettings{
	CompressionThreshold: uint16(0x1),
	CompressionAlgorithm: uint16(0x0),
	ClientThrottle: false,
	ClientThrottleThreshold: uint8(0x0),
	ClientThrottleScalar: float32(0),
}


*packet.Login{
	ClientProtocol: int32(685),
	ConnectionRequest: []uint8{<slice too long>},
}


*packet.ServerToClientHandshake{
	JWT: []uint8{0x65, 0x79, 0x4a, 0x34, 0x4e, 0x58, 0x55, 0x69, 0x4f, 0x69, 0x4a, 0x4e, 0x53, 0x46, 0x6c, 0x33, 0x52, 0x55, 0x46, 0x5a, 0x53, 0x45, 0x74, 0x76, 0x57, 0x6b, 0x6c, 0x36, 0x61, 0x6a, 0x42, 0x44, 0x51, 0x56, 0x46, 0x5a, 0x52, 0x6b, 0x73, 0x30, 0x52, 0x55, 0x56, 0x42, 0x51, 0x30, 0x6c, 0x45, 0x57, 0x57, 0x64, 0x42, 0x52, 0x55, 0x6c, 0x6e, 0x4d, 0x48, 0x4a, 0x59, 0x5a, 0x6c, 0x46, 0x54, 0x59, 0x6c, 0x6c, 0x72, 0x63, 0x55, 0x4e, 0x6a, 0x59, 0x7a, 0x6c, 0x71, 0x4f, 0x58, 0x4a, 0x79, 0x4d, 0x56, 0x64, 0x31, 0x4e, 0x6b, 0x59, 0x77, 0x5a, 0x45, 0x70, 0x43, 0x51, 0x6d, 0x4a, 0x69, 0x4d, 0x6e, 0x42, 0x45, 0x64, 0x6d, 0x78, 0x55, 0x51, 0x6a, 0x46, 0x73, 0x4e, 0x6a, 0x4e, 0x4f, 0x59, 0x55, 0x39, 0x78, 0x55, 0x56, 0x68, 0x77, 0x64, 0x32, 0x68, 0x45, 0x62, 0x55, 0x63, 0x31, 0x5a, 0x30, 0x6f, 0x7a, 0x5a, 0x7a, 0x4d, 0x33, 0x53, 0x57, 0x35, 0x50, 0x59, 0x7a, 0x56, 0x77, 0x64, 0x48, 0x64, 0x72, 0x65, 0x48, 0x51, 0x77, 0x54, 0x55, 0x77, 0x77, 0x64, 0x46, 0x4e, 0x61, 0x53, 0x6a, 0x6c, 0x70, 0x59, 0x33, 0x4e, 0x52, 0x64, 0x6b, 0x56, 0x53, 0x4f, 0x45, 0x74, 0x36, 0x5a, 0x48, 0x56, 0x42, 0x53, 0x46, 0x46, 0x35, 0x55, 0x44, 0x63, 0x7a, 0x4e, 0x6b, 0x5a, 0x57, 0x59, 0x57, 0x6c, 0x4f, 0x62, 0x56, 0x68, 0x59, 0x54, 0x57, 0x70, 0x72, 0x62, 0x30, 0x56, 0x49, 0x62, 0x58, 0x4a, 0x45, 0x4d, 0x45, 0x52, 0x72, 0x64, 0x58, 0x56, 0x46, 0x57, 0x56, 0x51, 0x77, 0x49, 0x69, 0x77, 0x69, 0x59, 0x57, 0x78, 0x6e, 0x49, 0x6a, 0x6f, 0x69, 0x52, 0x56, 0x4d, 0x7a, 0x4f, 0x44, 0x51, 0x69, 0x66, 0x51, 0x2e, 0x65, 0x79, 0x4a, 0x7a, 0x59, 0x57, 0x78, 0x30, 0x49, 0x6a, 0x6f, 0x69, 0x4d, 0x6e, 0x45, 0x30, 0x4d, 0x54, 0x4a, 0x56, 0x55, 0x57, 0x64, 0x53, 0x64, 0x55, 0x70, 0x68, 0x4e, 0x47, 0x4e, 0x77, 0x5a, 0x30, 0x70, 0x76, 0x59, 0x55, 0x64, 0x56, 0x64, 0x7a, 0x30, 0x39, 0x49, 0x6e, 0x30, 0x2e, 0x54, 0x68, 0x4e, 0x39, 0x35, 0x74, 0x42, 0x4f, 0x36, 0x4d, 0x58, 0x39, 0x41, 0x38, 0x6e, 0x39, 0x78, 0x65, 0x63, 0x4c, 0x77, 0x33, 0x44, 0x76, 0x63, 0x33, 0x68, 0x42, 0x71, 0x72, 0x67, 0x30, 0x69, 0x7a, 0x74, 0x31, 0x57, 0x49, 0x64, 0x5f, 0x43, 0x42, 0x66, 0x6f, 0x77, 0x39, 0x31, 0x4c, 0x5f, 0x77, 0x38, 0x4d, 0x79, 0x62, 0x65, 0x52, 0x66, 0x59, 0x6b, 0x68, 0x63, 0x37, 0x75, 0x73, 0x49, 0x59, 0x34, 0x6b, 0x4d, 0x37, 0x42, 0x62, 0x63, 0x73, 0x31, 0x57, 0x65, 0x7a, 0x61, 0x53, 0x6a, 0x35, 0x4c, 0x7a, 0x69, 0x55, 0x34, 0x53, 0x61, 0x32, 0x64, 0x51, 0x30, 0x41, 0x44, 0x39, 0x35, 0x75, 0x37, 0x6c, 0x42, 0x4b, 0x63, 0x68, 0x42, 0x30, 0x49, 0x43, 0x48, 0x6f, 0x64, 0x43, 0x4f, 0x54, 0x64, 0x6e, 0x34, 0x42, 0x66, 0x55, 0x75, 0x61, 0x44, 0x46, 0x4d, 0x2d, 0x6a, 0x35,},
}


*packet.ClientToServerHandshake{}


*packet.PlayStatus{
	Status: int32(0),
}


*packet.ClientCacheStatus{
	Enabled: false,
}


*packet.ResourcePacksInfo{
	TexturePackRequired: true,
	HasAddons: false,
	HasScripts: false,
	BehaviourPacks: []protocol.BehaviourPackInfo{},
	TexturePacks: []protocol.TexturePackInfo{
		protocol.TexturePackInfo{
			UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
			Version: "2.0.0",
			Size: uint64(0x47a17),
			ContentKey: "",
			SubPackName: "",
			ContentIdentity: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
			HasScripts: false,
			RTXEnabled: false,
		},
		protocol.TexturePackInfo{
			UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
			Version: "7.5.0",
			Size: uint64(0x22ac62),
			ContentKey: "",
			SubPackName: "",
			ContentIdentity: "8656a9ba-4693-459c-b27f-8638648460e6",
			HasScripts: false,
			RTXEnabled: false,
		},
	},
	ForcingServerPacks: false,
	PackURLs: []protocol.PackURL{},
}


*packet.ResourcePackClientResponse{
	Response: uint8(0x2),
	PacksToDownload: []string{"f7bb54c8-f244-4bd9-bacb-2eb7005953c1_2.0.0", "8656a9ba-4693-459c-b27f-8638648460e6_7.5.0",},
}


*packet.ResourcePackDataInfo{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x3),
	Size: uint64(0x47a17),
	Hash: []uint8{0xbc, 0xcf, 0x5c, 0x55, 0xfa, 0x5d, 0xef, 0x71, 0xac, 0xed, 0x2b, 0xc6, 0x8b, 0x70, 0x84, 0xb9, 0x46, 0xb0, 0x68, 0x6a, 0xdb, 0x81, 0x2b, 0xad, 0x6f, 0x19, 0xee, 0xd9, 0x6, 0x20, 0x7, 0xc7,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackDataInfo{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	DataChunkSize: uint32(0x20000),
	ChunkCount: uint32(0x12),
	Size: uint64(0x22ac62),
	Hash: []uint8{0x7f, 0x24, 0x3f, 0xe0, 0xe5, 0x8e, 0x2c, 0x56, 0x67, 0x53, 0x86, 0x6b, 0xaa, 0xd9, 0x3c, 0xd, 0xae, 0x73, 0x8, 0xc8, 0x55, 0x2f, 0x29, 0x84, 0x1, 0x57, 0xdb, 0xa5, 0xca, 0x6f, 0xb1, 0x23,},
	Premium: false,
	PackType: uint8(0x6),
}


*packet.ResourcePackChunkRequest{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	ChunkIndex: uint32(0x1),
}


*packet.ResourcePackChunkData{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	ChunkIndex: uint32(0x1),
	DataOffset: uint64(0x20000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	ChunkIndex: uint32(0x2),
}


*packet.ResourcePackChunkData{
	UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
	ChunkIndex: uint32(0x2),
	DataOffset: uint64(0x40000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x0),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x0),
	DataOffset: uint64(0x0),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x1),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x1),
	DataOffset: uint64(0x20000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x2),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x2),
	DataOffset: uint64(0x40000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x3),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x3),
	DataOffset: uint64(0x60000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x4),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x4),
	DataOffset: uint64(0x80000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x5),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x5),
	DataOffset: uint64(0xa0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x6),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x6),
	DataOffset: uint64(0xc0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x7),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x7),
	DataOffset: uint64(0xe0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x8),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x8),
	DataOffset: uint64(0x100000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x9),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x9),
	DataOffset: uint64(0x120000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xa),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xa),
	DataOffset: uint64(0x140000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xb),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xb),
	DataOffset: uint64(0x160000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xc),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xc),
	DataOffset: uint64(0x180000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xd),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xd),
	DataOffset: uint64(0x1a0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xe),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xe),
	DataOffset: uint64(0x1c0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xf),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0xf),
	DataOffset: uint64(0x1e0000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x10),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x10),
	DataOffset: uint64(0x200000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackChunkRequest{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x11),
}


*packet.ResourcePackChunkData{
	UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
	ChunkIndex: uint32(0x11),
	DataOffset: uint64(0x220000),
	Data: []uint8{<slice too long>},
}


*packet.ResourcePackClientResponse{
	Response: uint8(0x3),
	PacksToDownload: []string{},
}


*packet.ResourcePackStack{
	TexturePackRequired: false,
	BehaviourPacks: []protocol.StackResourcePack{},
	TexturePacks: []protocol.StackResourcePack{
		protocol.StackResourcePack{
			UUID: "f7bb54c8-f244-4bd9-bacb-2eb7005953c1",
			Version: "2.0.0",
			SubPackName: "",
		},
		protocol.StackResourcePack{
			UUID: "8656a9ba-4693-459c-b27f-8638648460e6",
			Version: "7.5.0",
			SubPackName: "",
		},
	},
	BaseGameVersion: "1.21.0",
	Experiments: []protocol.ExperimentData{},
	ExperimentsPreviouslyToggled: false,
	IncludeEditorPacks: false,
}


*packet.ResourcePackClientResponse{
	Response: uint8(0x4),
	PacksToDownload: []string{},
}


*packet.StartGame{
	EntityUniqueID: int64(460793),
	EntityRuntimeID: uint64(0x707f9),
	PlayerGameMode: int32(0),
	PlayerPosition: mgl32.Vec3{153, 47.621, 101},
	Pitch: float32(0),
	Yaw: float32(0),
	WorldSeed: int64(-1),
	SpawnBiomeType: int16(0),
	UserDefinedBiomeName: "",
	Dimension: int32(0),
	Generator: int32(1),
	WorldGameMode: int32(0),
	Hardcore: false,
	Difficulty: int32(2),
	WorldSpawn: protocol.BlockPos{153, 47, 101},
	AchievementsDisabled: true,
	EditorWorldType: int32(0),
	CreatedInEditor: false,
	ExportedFromEditor: false,
	DayCycleLockTime: int32(0),
	EducationEditionOffer: int32(0),
	EducationFeaturesEnabled: false,
	EducationProductID: "",
	RainLevel: float32(0),
	LightningLevel: float32(0),
	ConfirmedPlatformLockedContent: false,
	MultiPlayerGame: true,
	LANBroadcastEnabled: true,
	XBLBroadcastMode: int32(4),
	PlatformBroadcastMode: int32(4),
	CommandsEnabled: true,
	TexturePackRequired: true,
	GameRules: []protocol.GameRule{
		protocol.GameRule{
			Name: "naturalregeneration",
			CanBeModifiedByPlayer: false,
			Value: false,
		},
	},
	Experiments: []protocol.ExperimentData{},
	ExperimentsPreviouslyToggled: false,
	BonusChestEnabled: false,
	StartWithMapEnabled: false,
	PlayerPermissions: int32(1),
	ServerChunkTickRadius: int32(4),
	HasLockedBehaviourPack: false,
	HasLockedTexturePack: false,
	FromLockedWorldTemplate: false,
	MSAGamerTagsOnly: false,
	FromWorldTemplate: false,
	WorldTemplateSettingsLocked: false,
	OnlySpawnV1Villagers: false,
	PersonaDisabled: false,
	CustomSkinsDisabled: false,
	EmoteChatMuted: false,
	BaseGameVersion: "1.21.0",
	LimitedWorldWidth: int32(0),
	LimitedWorldDepth: int32(0),
	NewNether: true,
	EducationSharedResourceURI: protocol.EducationSharedResourceURI{
		ButtonName: "",
		LinkURI: "",
	},
	ForceExperimentalGameplay: protocol.Optional[bool] Not Set,
	LevelID: "",
	WorldName: "Zeqa Network",
	TemplateContentIdentity: "",
	Trial: false,
	PlayerMovementSettings: protocol.PlayerMovementSettings{
		MovementType: int32(1),
		RewindHistorySize: int32(0),
		ServerAuthoritativeBlockBreaking: false,
	},
	Time: int64(0),
	EnchantmentSeed: int32(0),
	Blocks: []protocol.BlockEntry{},
	Items: []protocol.ItemEntry{<slice too long>},
	MultiPlayerCorrelationID: "",
	ServerAuthoritativeInventory: true,
	GameVersion: "NetherGames v4.0",
	PropertyData: map[string]any{},
	ServerBlockStateChecksum: uint64(0x0),
	ClientSideGeneration: false,
	WorldTemplateID: uuid.UUID{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	ChatRestrictionLevel: uint8(0x0),
	DisablePlayerInteractions: false,
	ServerID: "",
	WorldID: "",
	ScenarioID: "",
	UseBlockNetworkIDHashes: false,
	ServerAuthoritativeSound: true,
}


*packet.RequestChunkRadius{
	ChunkRadius: int32(16),
	MaxChunkRadius: int32(0),
}


*packet.AvailableActorIdentifiers{
	SerialisedEntityIdentifiers: []uint8{<slice too long>},
}


*packet.BiomeDefinitionList{
	SerialisedBiomeDefinitions: []uint8{<slice too long>},
}


*packet.UpdateAttributes{
	EntityRuntimeID: uint64(0x707f9),
	Attributes: []protocol.Attribute{
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:health",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:follow_range",
				Value: float32(16),
				Max: float32(2048),
				Min: float32(0),
			},
			Default: float32(16),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:knockback_resistance",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:movement",
				Value: float32(0.1),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0.1),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:attack_damage",
				Value: float32(1),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(1),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:absorption",
				Value: float32(0),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.hunger",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.saturation",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.exhaustion",
				Value: float32(0),
				Max: float32(5),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.level",
				Value: float32(0),
				Max: float32(24791),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.experience",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
	},
	Tick: uint64(0x0),
}


*packet.AvailableCommands{
	EnumValues: []string{},
	ChainedSubcommandValues: []string{},
	Suffixes: []string{},
	Enums: []protocol.CommandEnum{},
	ChainedSubcommands: []protocol.ChainedSubcommand{},
	Commands: []protocol.Command{},
	DynamicEnums: []protocol.DynamicEnum{},
	Constraints: []protocol.CommandEnumConstraint{},
}


*packet.UpdateAbilities{
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460793),
		PlayerPermissions: uint8(0x1),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x3f),
				FlySpeed: float32(0.05),
				WalkSpeed: float32(0.1),
			},
		},
	},
}


*packet.UpdateAdventureSettings{
	NoPvM: false,
	NoMvP: false,
	ImmutableWorld: false,
	ShowNameTags: true,
	AutoJump: true,
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f9),
	EntityMetadata: map[uint32]any{
		0x0: int64(844459290411008),
		0x8: int32(0),
		0x9: uint8(0x0),
		0x35: float32(0.6),
		0x51: uint8(0x1),
		0x4: "SrDuck84",
		0x5: int64(-1),
		0x25: int64(-1),
		0x54: "",
		0x2a: int16(300),
		0x36: float32(1.8),
		0x3: uint8(0x0),
		0x6: int64(0),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.InventoryContent{
	WindowID: uint32(0x0),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x0),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x77),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x77),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x78),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventoryContent{
	WindowID: uint32(0x78),
	Content: []protocol.ItemInstance{
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
		protocol.ItemInstance{
			StackNetworkID: int32(0),
			Stack: protocol.ItemStack{
				ItemType: protocol.ItemType{
					NetworkID: int32(0),
					MetadataValue: uint32(0x0),
				},
				BlockRuntimeID: int32(0),
				Count: uint16(0x0),
				NBTData: map[string]any{},
				CanBePlacedOn: []string{},
				CanBreak: []string{},
				HasNetworkID: false,
			},
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x0),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1c),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1d),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1e),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.InventorySlot{
	WindowID: uint32(0x7c),
	Slot: uint32(0x1f),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f9),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x0),
}


*packet.CreativeContent{
	Items: []protocol.CreativeItem{<slice too long>},
}


*packet.CraftingData{
	Recipes: []protocol.Recipe{<slice too long>},
	PotionRecipes: []protocol.PotionRecipe{
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(12),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(13),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(15),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(16),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(17),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(19),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(20),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(26),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(27),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(29),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(30),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(32),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(33),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(34),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(38),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(39),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(40),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(41),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(6),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(7),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(7),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(8),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(10),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(11),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(3),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(298),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(4),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(12),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(13),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(15),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(16),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(14),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(17),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(19),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(20),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(26),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(27),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(25),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(29),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(28),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(30),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(32),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(33),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(31),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(34),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(38),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(37),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(39),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(40),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(41),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(6),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(5),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(7),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(7),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(8),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(10),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(11),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(9),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(17),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(380),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(3),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(298),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(4),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(0),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(1),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(22),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(23),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(22),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(21),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(23),
			ReagentItemID: int32(402),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(14),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(28),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(25),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(31),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(12),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(21),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(287),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(5),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(9),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(271),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(19),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(589),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(37),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(590),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(40),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(424),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(14),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(433),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(28),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(282),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(25),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(438),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(31),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(439),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(12),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(443),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(21),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(287),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(5),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(544),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(9),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(271),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(19),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(589),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(37),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(4),
			ReagentItemID: int32(590),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(40),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(10),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(15),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(1),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(22),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(26),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(27),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(2),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(32),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(33),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(3),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(435),
			InputPotionMetadata: int32(6),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(435),
			OutputPotionMetadata: int32(8),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(10),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(15),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(18),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(1),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(22),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(26),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(23),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(27),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(24),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(2),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(32),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(35),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(33),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(3),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(34),
		},
		protocol.PotionRecipe{
			InputPotionID: int32(577),
			InputPotionMetadata: int32(6),
			ReagentItemID: int32(437),
			ReagentItemMetadata: int32(0),
			OutputPotionID: int32(577),
			OutputPotionMetadata: int32(8),
		},
	},
	PotionContainerChangeRecipes: []protocol.PotionContainerChangeRecipe{
		protocol.PotionContainerChangeRecipe{
			InputItemID: int32(435),
			ReagentItemID: int32(335),
			OutputItemID: int32(577),
		},
	},
	MaterialReducers: []protocol.MaterialReducer{},
	ClearRecipes: true,
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x1c, 0x92, 0xba, 0x47, 0x35, 0x27, 0x3b, 0x7, 0xa1, 0x32, 0xa, 0xf4, 0x66, 0x6a, 0xe5, 0xe9},
			EntityUniqueID: int64(458240),
			Username: "Captainkam5410",
			XUID: "2535408854295954",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "bbb25b29-3f11-455a-b3fa-f5d3429ac0ff.RoastedTurkey",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{0x6e, 0x75, 0x6c, 0x6c,},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "0ed7c40a-aaae-4422-900b-98c5e42eda00",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xe6, 0x2d, 0xde, 0x42, 0xb8, 0x8f, 0x39, 0x57, 0xa8, 0xf7, 0x79, 0x62, 0xe, 0x65, 0x38, 0xbb},
			EntityUniqueID: int64(458933),
			Username: "BeefyHat98",
			XUID: "2535436554904434",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Custom4e04c599-a8aa-38a7-8774-6c1373c01017",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x40),
				CapeImageHeight: uint32(0x20),
				CapeData: []uint8{<slice too long>},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "68842582-1f0b-493c-b5e9-9bb0673a8a54",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xc4, 0x1d, 0x2e, 0xfc, 0x8d, 0xa4, 0x3a, 0x22, 0x95, 0x69, 0x2b, 0x33, 0x27, 0xb4, 0x9a, 0xe0},
			EntityUniqueID: int64(460667),
			Username: "Percykiu",
			XUID: "2535406941630462",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Standard_Custom",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x40),
				CapeImageHeight: uint32(0x20),
				CapeData: []uint8{<slice too long>},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "a06d1162-e4d0-4c2d-b306-dc672ee09e7b",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x2f, 0x7d, 0x4c, 0x17, 0x1a, 0x31, 0x35, 0xce, 0x80, 0x63, 0x29, 0xb4, 0xe0, 0x7a, 0x65, 0x78},
			EntityUniqueID: int64(460670),
			Username: "CreamyyXG4MR",
			XUID: "2535431777248148",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "4e0a742a-290a-4b42-a171-5b0b319a5eca.Duck1",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "aa9ad278-da79-408f-a430-0a168de2289e",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x8d, 0xd6, 0x49, 0x2d, 0xbc, 0x55, 0x33, 0xea, 0xaa, 0x1, 0x27, 0x57, 0x7e, 0x5b, 0x58, 0x19},
			EntityUniqueID: int64(460680),
			Username: "M75739",
			XUID: "2535449228091967",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "CustomSlim1063cff3-4664-347e-af7b-c87a78bc6c54ef479b6d-7072-47aa-8985-0f025cd24cdb",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "596bef2c-79a1-4308-9825-8c59d9709574",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xef, 0x1f, 0x50, 0x1b, 0x6d, 0x1b, 0x32, 0xb3, 0x8e, 0x82, 0x2f, 0x35, 0x5f, 0xe3, 0x1a, 0xc9},
			EntityUniqueID: int64(460767),
			Username: "DARK X KING7370",
			XUID: "2535437542138042",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Custom9de5a4fae6504120b24470f8fb67f9cb7ed341e7-6bd3-44e2-8899-7ab99fad34e8",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "bf9627f0-3d4a-44f5-b852-32e336e45cfa",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x7e, 0x65, 0x24, 0x4d, 0xc1, 0x4d, 0x3d, 0x4e, 0xac, 0xf6, 0xb3, 0x8f, 0xce, 0x7f, 0xb3, 0x7c},
			EntityUniqueID: int64(460774),
			Username: "PVPeach1453",
			XUID: "2535433105648913",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "9634919c-d05c-4347-89e3-bd8743fe9575.BlazeRider",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "90b6ad47-e7ad-4915-bde6-89023ebf19bd",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xe8, 0x8a, 0x1d, 0xa0, 0x48, 0xe6, 0x3b, 0x95, 0xb1, 0xe6, 0x44, 0x89, 0xde, 0x5a, 0x5b, 0xb3},
			EntityUniqueID: int64(460776),
			Username: "two days1128",
			XUID: "2535469553969851",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "CustomSlim005eebbbabab421ebcb36cd75230b0c3",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "6929705f-e82b-4afe-926a-73776e5f43de",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x10, 0xfb, 0x22, 0x85, 0xf1, 0x24, 0x3d, 0xf, 0x90, 0x97, 0xaf, 0x3c, 0x65, 0xcb, 0x78, 0x8e},
			EntityUniqueID: int64(460780),
			Username: "SmiledKalle2189",
			XUID: "2535409008220386",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "CustomSlim39e243549eda4304b62b3ff671db22a5",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "9eb33394-8923-4491-a2c9-bb9e2b5752ad",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x9d, 0x35, 0x67, 0xcc, 0xa0, 0x5a, 0x30, 0x3e, 0x9f, 0x52, 0xf6, 0x4c, 0x1b, 0x9c, 0xc6, 0x6},
			EntityUniqueID: int64(460783),
			Username: "MesomaPlays",
			XUID: "2535461813681221",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Customfa6705b34d4d44ecb2ab777ad5fe3b2cef479b6d-7072-47aa-8985-0f025cd24cdb",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "c5d15b63-3cba-4672-aa1e-674ae1d9052b",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xe0, 0x39, 0x72, 0x4b, 0x37, 0x46, 0x3c, 0xaf, 0xb9, 0xf4, 0x6a, 0x21, 0x70, 0x51, 0xd1, 0xe4},
			EntityUniqueID: int64(460785),
			Username: "Muezin27",
			XUID: "2535460661046770",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Custom2a43359b11a64f8faaa1c865fcbe342e",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "a511ec61-ed68-403a-8267-d43abe04952e",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xd8, 0x23, 0x4b, 0xac, 0x2c, 0x4e, 0x3f, 0x6, 0x9a, 0xdf, 0xa5, 0x35, 0x73, 0x4e, 0x78, 0x98},
			EntityUniqueID: int64(460787),
			Username: "Wsets",
			XUID: "2535469866494033",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Standard_Custom",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x80),
				SkinImageHeight: uint32(0x80),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "02cad6f4-5fc8-4410-b8de-819574041fa5",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0xac, 0x81, 0x82, 0x4b, 0xd0, 0x59, 0x39, 0xb, 0x8c, 0xde, 0xaa, 0x98, 0x6d, 0x6c, 0x42, 0xcb},
			EntityUniqueID: int64(460789),
			Username: "D4rkS1de6256",
			XUID: "2535442931657673",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Standard_Custom",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "6bbdc1cb-814b-4b3f-bf88-3a092e9a787b",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x16, 0x20, 0x1e, 0x6, 0x61, 0x60, 0x3c, 0x6e, 0x80, 0x4b, 0xab, 0x5d, 0x86, 0xe2, 0xf9, 0x86},
			EntityUniqueID: int64(460790),
			Username: "ArcherNasistal",
			XUID: "2535441817039759",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Standard_Custom",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "45e6fe0f-2c60-419c-abdb-9873803d26cf",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x60, 0x3, 0x8b, 0x12, 0x3e, 0x68, 0x3b, 0x4c, 0xb3, 0x9f, 0x69, 0xfa, 0x3, 0xfb, 0xbf, 0x86},
			EntityUniqueID: int64(460791),
			Username: "Killua2120",
			XUID: "2535441541240643",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "acb0af1e-5fd1-4d38-8260-a0a5c75c47e6.bane_steveef479b6d-7072-47aa-8985-0f025cd24cdb",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{0x6e, 0x75, 0x6c, 0x6c,},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "dc4aafab-b432-441a-8f08-029306b0be62",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x8c, 0x25, 0x86, 0xde, 0xd4, 0x65, 0x3f, 0x6a, 0xaf, 0xd, 0x9, 0xc2, 0x3c, 0x41, 0x2e, 0x1},
			EntityUniqueID: int64(460792),
			Username: "DeucePlays",
			XUID: "2535473005353924",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "CustomSlim004af7f007964b09a8b5e949369afad8",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "5a1d5098-d5da-486f-adc4-00a1de9f5dba",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x56, 0x23, 0x8e, 0x3c, 0x43, 0xad, 0x3a, 0x61, 0xa8, 0x9e, 0x83, 0xc5, 0xce, 0x6e, 0x52, 0x8d},
			EntityUniqueID: int64(460793),
			Username: "SrDuck84",
			XUID: "2535445174258287",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "4cabae68-8f6c-4a3d-b881-0033f1761184",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x20),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "ae1c7311-4ce8-4005-832e-cfbf17f5997b",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.UpdateAttributes{
	EntityRuntimeID: uint64(0x707f9),
	Attributes: []protocol.Attribute{
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:health",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:knockback_resistance",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:movement",
				Value: float32(0.1),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0.1),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:absorption",
				Value: float32(0),
				Max: float32(3.4028235e+38),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.hunger",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.saturation",
				Value: float32(20),
				Max: float32(20),
				Min: float32(0),
			},
			Default: float32(20),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.level",
				Value: float32(0),
				Max: float32(24791),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
		protocol.Attribute{
			AttributeValue: protocol.AttributeValue{
				Name: "minecraft:player.experience",
				Value: float32(0),
				Max: float32(1),
				Min: float32(0),
			},
			Default: float32(0),
			Modifiers: []protocol.AttributeModifier{},
		},
	},
	Tick: uint64(0x0),
}


*packet.PlayerList{
	ActionType: uint8(0x0),
	Entries: []protocol.PlayerListEntry{
		protocol.PlayerListEntry{
			UUID: uuid.UUID{0x3a, 0x15, 0xad, 0x7e, 0x5, 0x66, 0x32, 0x5, 0xb6, 0x31, 0x5e, 0xd, 0x7a, 0xc5, 0xa9, 0x22},
			EntityUniqueID: int64(460794),
			Username: "Laxxyyblade",
			XUID: "2535432306466078",
			PlatformChatID: "",
			BuildPlatform: int32(-1),
			Skin: protocol.Skin{
				SkinID: "Custom07495ce8dca74ba3b9394acc7aae461a",
				PlayFabID: "",
				SkinResourcePatch: []uint8{0x7b, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6f, 0x69, 0x64, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x7d, 0x7d,},
				SkinImageWidth: uint32(0x40),
				SkinImageHeight: uint32(0x40),
				SkinData: []uint8{<slice too long>},
				Animations: []protocol.SkinAnimation{},
				CapeImageWidth: uint32(0x0),
				CapeImageHeight: uint32(0x0),
				CapeData: []uint8{},
				SkinGeometry: []uint8{<slice too long>},
				AnimationData: []uint8{},
				GeometryDataEngineVersion: []uint8{0x31, 0x2e, 0x32, 0x31, 0x2e, 0x30,},
				PremiumSkin: false,
				PersonaSkin: false,
				PersonaCapeOnClassicSkin: false,
				PrimaryUser: true,
				CapeID: "",
				FullID: "95e83282-3534-4343-aaa3-be11db10dee9",
				SkinColour: "",
				ArmSize: "wide",
				PersonaPieces: []protocol.PersonaPiece{},
				PieceTintColours: []protocol.PersonaPieceTintColour{},
				Trusted: true,
				OverrideAppearance: true,
			},
			Teacher: false,
			Host: false,
			SubClient: false,
		},
	},
}


*packet.ChunkRadiusUpdated{
	ChunkRadius: int32(5),
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.NetworkChunkPublisherUpdate{
	Position: protocol.BlockPos{153, 46, 101},
	Radius: uint32(0x50),
	SavedChunks: []protocol.ChunkPos{},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xb),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xb),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{11, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{6, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{11, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{6, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 8},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xb),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 8},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 3},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 3},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{11, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{6, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{11, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{6, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 8},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xb),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 8},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 3},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 3},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{11, 8},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{6, 8},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{11, 3},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{6, 3},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x7),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{12, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{5, 6},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{12, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{5, 5},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 9},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 9},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{9, 2},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{8, 2},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{12, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0xa),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{5, 7},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{12, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{5, 4},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelSoundEvent{
	SoundType: uint32(0x2a),
	Position: mgl32.Vec3{153.3, 47.4, 101.7},
	ExtraData: int32(-1),
	EntityType: "minecraft:player",
	BabyMob: false,
	DisableRelativeVolume: false,
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 9},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{7, 9},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x8),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.LevelChunk{
	Position: protocol.ChunkPos{10, 2},
	Dimension: int32(0),
	HighestSubChunk: uint16(0x0),
	SubChunkCount: uint32(0x9),
	CacheEnabled: false,
	BlobHashes: []uint64{},
	RawPayload: []uint8{<slice too long>},
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x1c, 0x92, 0xba, 0x47, 0x35, 0x27, 0x3b, 0x7, 0xa1, 0x32, 0xa, 0xf4, 0x66, 0x6a, 0xe5, 0xe9},
	Username: "Captainkam5410",
	EntityRuntimeID: uint64(0x6fe00),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x4: "Captainkam5410",
		0x3: uint8(0x0),
		0x9: uint8(0x0),
		0x35: float32(0.6),
		0x0: int64(844459290476544),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x6: int64(0),
		0x8: int32(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x26: float32(1),
		0x25: int64(-1),
		0x54: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(458240),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x6fe00),
	EntityMetadata: map[uint32]any{
		0x4: "Captainkam5410",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x6fe00),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x6fe00),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xe6, 0x2d, 0xde, 0x42, 0xb8, 0x8f, 0x39, 0x57, 0xa8, 0xf7, 0x79, 0x62, 0xe, 0x65, 0x38, 0xbb},
	Username: "BeefyHat98",
	EntityRuntimeID: uint64(0x700b5),
	PlatformChatID: "",
	Position: mgl32.Vec3{153.3, 46.5, 101.7},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(359.99997),
	HeadYaw: float32(359.99997),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x25: int64(-1),
		0x54: "§g\ue1c9§7 | §fKeyboard",
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x6: int64(0),
		0x8: int32(0),
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x4: "§7BeefyHat98",
		0x0: int64(844459290411008),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(458933),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x700b5),
	EntityMetadata: map[uint32]any{
		0x4: "§7BeefyHat98",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x700b5),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x700b5),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xc4, 0x1d, 0x2e, 0xfc, 0x8d, 0xa4, 0x3a, 0x22, 0x95, 0x69, 0x2b, 0x33, 0x27, 0xb4, 0x9a, 0xe0},
	Username: "Percykiu",
	EntityRuntimeID: uint64(0x7077b),
	PlatformChatID: "",
	Position: mgl32.Vec3{153.3, 46.5, 101.7},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(3.5452118),
	Yaw: float32(351.13818),
	HeadYaw: float32(351.13818),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x26: float32(1),
		0x4: "§7Percykiu",
		0x9: uint8(0x0),
		0x8: int32(0),
		0x25: int64(-1),
		0x54: "§g\ue1ca§7 | §fKeyboard",
		0x36: float32(1.8),
		0x6: int64(0),
		0x7: int16(300),
		0x2a: int16(300),
		0x35: float32(0.6),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x1c: protocol.BlockPos{0, 0, 0},
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460667),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x7077b),
	EntityMetadata: map[uint32]any{
		0x4: "§7Percykiu",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x7077b),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x7077b),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x2f, 0x7d, 0x4c, 0x17, 0x1a, 0x31, 0x35, 0xce, 0x80, 0x63, 0x29, 0xb4, 0xe0, 0x7a, 0x65, 0x78},
	Username: "CreamyyXG4MR",
	EntityRuntimeID: uint64(0x7077e),
	PlatformChatID: "",
	Position: mgl32.Vec3{153.3, 46.5, 101.7},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(360),
	HeadYaw: float32(360),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x0: int64(844459290411008),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x5: int64(-1),
		0x4: "§7CreamyyXG4MR",
		0x3: uint8(0x0),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x26: float32(1),
		0x25: int64(-1),
		0x6: int64(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x54: "§g\ue1cb§7 | §fKeyboard",
		0x8: int32(0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460670),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x7077e),
	EntityMetadata: map[uint32]any{
		0x4: "§7CreamyyXG4MR",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x7077e),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x7077e),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x10, 0xfb, 0x22, 0x85, 0xf1, 0x24, 0x3d, 0xf, 0x90, 0x97, 0xaf, 0x3c, 0x65, 0xcb, 0x78, 0x8e},
	Username: "SmiledKalle2189",
	EntityRuntimeID: uint64(0x707ec),
	PlatformChatID: "",
	Position: mgl32.Vec3{154.2617, 47, 102.341},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(10.286514),
	Yaw: float32(116.50775),
	HeadYaw: float32(116.50775),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x51: uint8(0x1),
		0x25: int64(-1),
		0x54: "§g\ue1cb§7 | §fTouch",
		0x9: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x5: int64(-1),
		0x4: "§7SmiledKalle2189",
		0x3: uint8(0x0),
		0x0: int64(844459290411008),
		0x26: float32(1),
		0x6: int64(0),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x35: float32(0.6),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460780),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707ec),
	EntityMetadata: map[uint32]any{
		0x4: "§7SmiledKalle2189",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707ec),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707ec),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x9d, 0x35, 0x67, 0xcc, 0xa0, 0x5a, 0x30, 0x3e, 0x9f, 0x52, 0xf6, 0x4c, 0x1b, 0x9c, 0xc6, 0x6},
	Username: "MesomaPlays",
	EntityRuntimeID: uint64(0x707ef),
	PlatformChatID: "",
	Position: mgl32.Vec3{153.3, 46.5, 101.7},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(360),
	HeadYaw: float32(360),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x4: "§7MesomaPlays",
		0x26: float32(1),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x0: int64(844459290411008),
		0x2a: int16(300),
		0x35: float32(0.6),
		0x54: "§g\ue1cb§7 | §fTouch",
		0x25: int64(-1),
		0x6: int64(0),
		0x3: uint8(0x0),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x36: float32(1.8),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460783),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707ef),
	EntityMetadata: map[uint32]any{
		0x4: "§7MesomaPlays",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707ef),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707ef),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xe0, 0x39, 0x72, 0x4b, 0x37, 0x46, 0x3c, 0xaf, 0xb9, 0xf4, 0x6a, 0x21, 0x70, 0x51, 0xd1, 0xe4},
	Username: "Muezin27",
	EntityRuntimeID: uint64(0x707f1),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x0: int64(844459290476544),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x25: int64(-1),
		0x9: uint8(0x0),
		0x5: int64(-1),
		0x54: "",
		0x7: int16(300),
		0x2a: int16(300),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x26: float32(1),
		0x8: int32(0),
		0x6: int64(0),
		0x4: "Muezin27",
		0x3: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460785),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f1),
	EntityMetadata: map[uint32]any{
		0x4: "Muezin27",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707f1),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f1),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xd8, 0x23, 0x4b, 0xac, 0x2c, 0x4e, 0x3f, 0x6, 0x9a, 0xdf, 0xa5, 0x35, 0x73, 0x4e, 0x78, 0x98},
	Username: "Wsets",
	EntityRuntimeID: uint64(0x707f3),
	PlatformChatID: "",
	Position: mgl32.Vec3{149.5608, 48, 106.4022},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(23.650146),
	Yaw: float32(82.841736),
	HeadYaw: float32(82.841736),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(534),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§7» §gRegion §fSelector§7 «",
				},
				"PracticeItem": "hub.lobby",
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x2a: int16(300),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x8: int32(0),
		0x0: int64(844459290411008),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x54: "§g\ue1c9§7 | §fKeyboard",
		0x51: uint8(0x1),
		0x6: int64(0),
		0x4: "§7Wsets",
		0x36: float32(1.8),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460787),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f3),
	EntityMetadata: map[uint32]any{
		0x4: "§7Wsets",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707f3),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f3),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xac, 0x81, 0x82, 0x4b, 0xd0, 0x59, 0x39, 0xb, 0x8c, 0xde, 0xaa, 0x98, 0x6d, 0x6c, 0x42, 0xcb},
	Username: "D4rkS1de6256",
	EntityRuntimeID: uint64(0x707f5),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x6: int64(0),
		0x4: "D4rkS1de6256",
		0x25: int64(-1),
		0x2a: int16(300),
		0x35: float32(0.6),
		0x9: uint8(0x0),
		0x7: int16(300),
		0x3: uint8(0x0),
		0x0: int64(844459290476544),
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x26: float32(1),
		0x54: "",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460789),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f5),
	EntityMetadata: map[uint32]any{
		0x4: "D4rkS1de6256",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707f5),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f5),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x16, 0x20, 0x1e, 0x6, 0x61, 0x60, 0x3c, 0x6e, 0x80, 0x4b, 0xab, 0x5d, 0x86, 0xe2, 0xf9, 0x86},
	Username: "ArcherNasistal",
	EntityRuntimeID: uint64(0x707f6),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x54: "",
		0x26: float32(1),
		0x25: int64(-1),
		0x0: int64(844459290476544),
		0x8: int32(0),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x6: int64(0),
		0x4: "ArcherNasistal",
		0x9: uint8(0x0),
		0x35: float32(0.6),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460790),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f6),
	EntityMetadata: map[uint32]any{
		0x4: "ArcherNasistal",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707f6),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f6),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x60, 0x3, 0x8b, 0x12, 0x3e, 0x68, 0x3b, 0x4c, 0xb3, 0x9f, 0x69, 0xfa, 0x3, 0xfb, 0xbf, 0x86},
	Username: "Killua2120",
	EntityRuntimeID: uint64(0x707f7),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x54: "",
		0x3: uint8(0x0),
		0x0: int64(844459290476544),
		0x9: uint8(0x0),
		0x8: int32(0),
		0x51: uint8(0x1),
		0x25: int64(-1),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x26: float32(1),
		0x7: int16(300),
		0x4: "Killua2120",
		0x35: float32(0.6),
		0x5: int64(-1),
		0x36: float32(1.8),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460791),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f7),
	EntityMetadata: map[uint32]any{
		0x4: "Killua2120",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707f7),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f7),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x8c, 0x25, 0x86, 0xde, 0xd4, 0x65, 0x3f, 0x6a, 0xaf, 0xd, 0x9, 0xc2, 0x3c, 0x41, 0x2e, 0x1},
	Username: "DeucePlays",
	EntityRuntimeID: uint64(0x707f8),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x6: int64(0),
		0x0: int64(844459290476544),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x4: "DeucePlays",
		0x54: "",
		0x8: int32(0),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x25: int64(-1),
		0x5: int64(-1),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460792),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707f8),
	EntityMetadata: map[uint32]any{
		0x4: "DeucePlays",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707f8),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707f8),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x3a, 0x15, 0xad, 0x7e, 0x5, 0x66, 0x32, 0x5, 0xb6, 0x31, 0x5e, 0xd, 0x7a, 0xc5, 0xa9, 0x22},
	Username: "Laxxyyblade",
	EntityRuntimeID: uint64(0x707fa),
	PlatformChatID: "",
	Position: mgl32.Vec3{153, 46, 101},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(0),
	Yaw: float32(0),
	HeadYaw: float32(0),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x6: int64(0),
		0x54: "",
		0x8: int32(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x3: uint8(0x0),
		0x7: int16(300),
		0x2a: int16(300),
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x26: float32(1),
		0x5: int64(-1),
		0x4: "Laxxyyblade",
		0x9: uint8(0x0),
		0x25: int64(-1),
		0x0: int64(844459290476544),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460794),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707fa),
	EntityMetadata: map[uint32]any{
		0x4: "Laxxyyblade",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707fa),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707fa),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xef, 0x1f, 0x50, 0x1b, 0x6d, 0x1b, 0x32, 0xb3, 0x8e, 0x82, 0x2f, 0x35, 0x5f, 0xe3, 0x1a, 0xc9},
	Username: "DARK X KING7370",
	EntityRuntimeID: uint64(0x707df),
	PlatformChatID: "",
	Position: mgl32.Vec3{147.5323, 47, 94.1463},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(12.641098),
	Yaw: float32(150.77856),
	HeadYaw: float32(150.77856),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x4: "§7DARK X KING7370",
		0x0: int64(844459290411010),
		0x8: int32(0),
		0x2a: int16(300),
		0x35: float32(0.6),
		0x25: int64(-1),
		0x6: int64(0),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x5: int64(-1),
		0x3: uint8(0x0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x26: float32(1),
		0x54: "§g\ue1cb§7 | §fTouch",
		0x9: uint8(0x0),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460767),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707df),
	EntityMetadata: map[uint32]any{
		0x4: "§7DARK X KING7370",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707df),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707df),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0xe8, 0x8a, 0x1d, 0xa0, 0x48, 0xe6, 0x3b, 0x95, 0xb1, 0xe6, 0x44, 0x89, 0xde, 0x5a, 0x5b, 0xb3},
	Username: "two days1128",
	EntityRuntimeID: uint64(0x707e8),
	PlatformChatID: "",
	Position: mgl32.Vec3{148.8907, 47, 89.6832},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(11.573914),
	Yaw: float32(358.6193),
	HeadYaw: float32(358.6193),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(1),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(404),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x1),
			NBTData: map[string]any{
				"display": map[string]any{
					"Name": "§r§7» §cLeave§7 «",
				},
				"PracticeItem": "hub.leave",
			},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x26: float32(1),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x51: uint8(0x1),
		0x5: int64(-1),
		0x6: int64(0),
		0x0: int64(844459290411008),
		0x2a: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x35: float32(0.6),
		0x25: int64(-1),
		0x54: "§g\ue1ca§7 | §fTouch",
		0x9: uint8(0x0),
		0x36: float32(1.8),
		0x4: "§7two days1128",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460776),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707e8),
	EntityMetadata: map[uint32]any{
		0x4: "§7two days1128",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707e8),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707e8),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x8d, 0xd6, 0x49, 0x2d, 0xbc, 0x55, 0x33, 0xea, 0xaa, 0x1, 0x27, 0x57, 0x7e, 0x5b, 0x58, 0x19},
	Username: "M75739",
	EntityRuntimeID: uint64(0x70788),
	PlatformChatID: "",
	Position: mgl32.Vec3{165.9436, 46.25, 98.0298},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(-11.000946),
	Yaw: float32(73.410645),
	HeadYaw: float32(73.410645),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x5: int64(-1),
		0x4: "§7M75739",
		0x3: uint8(0x0),
		0x51: uint8(0x1),
		0x25: int64(-1),
		0x7: int16(300),
		0x1c: protocol.BlockPos{0, 0, 0},
		0x36: float32(1.8),
		0x35: float32(0.6),
		0x26: float32(1),
		0x0: int64(844459290411008),
		0x9: uint8(0x0),
		0x6: int64(0),
		0x54: "§g\ue1c9§7 | §fKeyboard",
		0x8: int32(0),
		0x2a: int16(300),
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460680),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x70788),
	EntityMetadata: map[uint32]any{
		0x4: "§7M75739",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x70788),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x70788),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.AddPlayer{
	UUID: uuid.UUID{0x7e, 0x65, 0x24, 0x4d, 0xc1, 0x4d, 0x3d, 0x4e, 0xac, 0xf6, 0xb3, 0x8f, 0xce, 0x7f, 0xb3, 0x7c},
	Username: "PVPeach1453",
	EntityRuntimeID: uint64(0x707e6),
	PlatformChatID: "",
	Position: mgl32.Vec3{137.7741, 41, 71.2826},
	Velocity: mgl32.Vec3{0, 0, 0},
	Pitch: float32(4.375839),
	Yaw: float32(335.80026),
	HeadYaw: float32(335.80026),
	HeldItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	GameType: int32(0),
	EntityMetadata: map[uint32]any{
		0x35: float32(0.6),
		0x25: int64(-1),
		0x5: int64(-1),
		0x9: uint8(0x0),
		0x2a: int16(300),
		0x6: int64(0),
		0x54: "§g\ue1cb§7 | §fTouch",
		0x51: uint8(0x1),
		0x36: float32(1.8),
		0x26: float32(1),
		0x3: uint8(0x0),
		0x8: int32(0),
		0x7: int16(300),
		0x4: "§7PVPeach1453",
		0x0: int64(844459290411008),
		0x1c: protocol.BlockPos{0, 0, 0},
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	AbilityData: protocol.AbilityData{
		EntityUniqueID: int64(460774),
		PlayerPermissions: uint8(0x0),
		CommandPermissions: uint8(0x0),
		Layers: []protocol.AbilityLayer{
			protocol.AbilityLayer{
				Type: uint16(0x1),
				Abilities: uint32(0x7ffff),
				Values: uint32(0x0),
				FlySpeed: float32(0),
				WalkSpeed: float32(0),
			},
		},
	},
	EntityLinks: []protocol.EntityLink{},
	DeviceID: "",
	BuildPlatform: int32(-1),
}


*packet.SetActorData{
	EntityRuntimeID: uint64(0x707e6),
	EntityMetadata: map[uint32]any{
		0x4: "§7PVPeach1453",
	},
	EntityProperties: protocol.EntityProperties{
		IntegerProperties: []protocol.IntegerEntityProperty{},
		FloatProperties: []protocol.FloatEntityProperty{},
	},
	Tick: uint64(0x0),
}


*packet.MobArmourEquipment{
	EntityRuntimeID: uint64(0x707e6),
	Helmet: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Chestplate: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Leggings: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	Boots: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
}


*packet.MobEquipment{
	EntityRuntimeID: uint64(0x707e6),
	NewItem: protocol.ItemInstance{
		StackNetworkID: int32(0),
		Stack: protocol.ItemStack{
			ItemType: protocol.ItemType{
				NetworkID: int32(0),
				MetadataValue: uint32(0x0),
			},
			BlockRuntimeID: int32(0),
			Count: uint16(0x0),
			NBTData: map[string]any{},
			CanBePlacedOn: []string{},
			CanBreak: []string{},
			HasNetworkID: false,
		},
	},
	InventorySlot: uint8(0x0),
	HotBarSlot: uint8(0x0),
	WindowID: uint8(0x77),
}


*packet.PlayStatus{
	Status: int32(3),
}


